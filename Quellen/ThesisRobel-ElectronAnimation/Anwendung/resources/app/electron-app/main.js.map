{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/animation/anim-create/anim-create.component.css","webpack:///./src/app/animation/anim-create/anim-create.component.html","webpack:///./src/app/animation/anim-create/anim-create.component.ts","webpack:///./src/app/animation/anim-timeline/anim-timeline.component.css","webpack:///./src/app/animation/anim-timeline/anim-timeline.component.html","webpack:///./src/app/animation/anim-timeline/anim-timeline.component.ts","webpack:///./src/app/animation/animation-display/animation-display.component.css","webpack:///./src/app/animation/animation-display/animation-display.component.html","webpack:///./src/app/animation/animation-display/animation-display.component.ts","webpack:///./src/app/animation/player/player.component.css","webpack:///./src/app/animation/player/player.component.html","webpack:///./src/app/animation/player/player.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/canvas/canvas.component.css","webpack:///./src/app/canvas/canvas.component.html","webpack:///./src/app/canvas/canvas.component.ts","webpack:///./src/app/editor/editor.component.css","webpack:///./src/app/editor/editor.component.html","webpack:///./src/app/editor/editor.component.ts","webpack:///./src/app/editor/hierarchy/hierarchy.component.css","webpack:///./src/app/editor/hierarchy/hierarchy.component.html","webpack:///./src/app/editor/hierarchy/hierarchy.component.ts","webpack:///./src/app/editor/material/material.component.css","webpack:///./src/app/editor/material/material.component.html","webpack:///./src/app/editor/material/material.component.ts","webpack:///./src/app/editor/meshes/box/box.component.css","webpack:///./src/app/editor/meshes/box/box.component.html","webpack:///./src/app/editor/meshes/box/box.component.ts","webpack:///./src/app/editor/meshes/cylinder/cylinder.component.css","webpack:///./src/app/editor/meshes/cylinder/cylinder.component.html","webpack:///./src/app/editor/meshes/cylinder/cylinder.component.ts","webpack:///./src/app/editor/meshes/disc/disc.component.css","webpack:///./src/app/editor/meshes/disc/disc.component.html","webpack:///./src/app/editor/meshes/disc/disc.component.ts","webpack:///./src/app/editor/meshes/ground/ground.component.css","webpack:///./src/app/editor/meshes/ground/ground.component.html","webpack:///./src/app/editor/meshes/ground/ground.component.ts","webpack:///./src/app/editor/meshes/meshes.component.css","webpack:///./src/app/editor/meshes/meshes.component.html","webpack:///./src/app/editor/meshes/meshes.component.ts","webpack:///./src/app/editor/meshes/plane/plane.component.css","webpack:///./src/app/editor/meshes/plane/plane.component.html","webpack:///./src/app/editor/meshes/plane/plane.component.ts","webpack:///./src/app/editor/meshes/sphere/sphere.component.css","webpack:///./src/app/editor/meshes/sphere/sphere.component.html","webpack:///./src/app/editor/meshes/sphere/sphere.component.ts","webpack:///./src/app/editor/meshes/torus/torus.component.css","webpack:///./src/app/editor/meshes/torus/torus.component.html","webpack:///./src/app/editor/meshes/torus/torus.component.ts","webpack:///./src/app/editor/transform/transform.component.css","webpack:///./src/app/editor/transform/transform.component.html","webpack:///./src/app/editor/transform/transform.component.ts","webpack:///./src/app/services/globals.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#animOptButton{\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n}\\r\\n\\r\\n#animName {\\r\\n    width: 6em;\\r\\n}\\r\\n\\r\\n#animFrames{\\r\\n    width: 3em;\\r\\n}\\r\\n\\r\\ndiv{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n\\r\\n  <input type=\\\"image\\\" src=\\\"assets/icons/plus.png\\\" alt=\\\"Create\\\" id=\\\"animOptButton\\\" />\\r\\n\\r\\n  <div>\\r\\n    <label> name: </label>\\r\\n    <input type=\\\"text\\\" id=\\\"animName\\\">\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <label> target: </label>\\r\\n    <select id=\\\"animProperty\\\">\\r\\n      <option value=\\\"position\\\" selected>position</option>\\r\\n      <option value=\\\"rotation\\\">rotation</option>\\r\\n      <option value=\\\"scaling\\\">scaling</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <label> fps: </label>\\r\\n    <input type=\\\"number\\\" id=\\\"animFrames\\\" class=\\\"animPropGroup\\\" min=\\\"1\\\" max=\\\"120\\\" value=\\\"30\\\">\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <label> loop: </label>\\r\\n    <select id=\\\"animBehavior\\\">\\r\\n      <option value=\\\"cycle\\\" selected>cycle</option>\\r\\n      <option value=\\\"relative\\\">relative</option>\\r\\n      <option value=\\\"constant\\\">constant</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <label for=\\\"setEasing\\\"> easing </label>\\r\\n    <input type=\\\"checkbox\\\" id=\\\"setEasing\\\">\\r\\n\\r\\n    <div *ngIf=\\\"useEasing\\\">\\r\\n\\r\\n      <select id=\\\"easingFn\\\">\\r\\n        <option value=\\\"circle\\\" selected>circle ease</option>\\r\\n        <option value=\\\"back\\\">back ease</option>\\r\\n        <option value=\\\"bounce\\\">bounce ease</option>\\r\\n        <option value=\\\"cubic\\\">cubic ease</option>\\r\\n        <option value=\\\"elastic\\\">elastic ease</option>\\r\\n        <option value=\\\"exponential\\\">exponential ease</option>\\r\\n        <option value=\\\"power\\\">power ease</option>\\r\\n        <option value=\\\"quadratic\\\">quadratic ease</option>\\r\\n        <option value=\\\"quartic\\\">quartic ease</option>\\r\\n        <option value=\\\"quintic\\\">quintic ease</option>\\r\\n        <option value=\\\"sine\\\">sine ease</option>\\r\\n        <option value=\\\"bezier\\\">bezier curve ease</option>\\r\\n      </select>\\r\\n\\r\\n      <select id=\\\"easingMode\\\">\\r\\n        <option value=\\\"easeIn\\\" selected>ease in</option>\\r\\n        <option value=\\\"easeOut\\\">ease out</option>\\r\\n        <option value=\\\"easeInOut\\\">ease inout</option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n</fieldset>\"","import { Component, OnInit } from '@angular/core';\r\nimport * as BABYLON from 'babylonjs';\r\nimport { Subscription } from 'rxjs';\r\nimport { GlobalsService } from '../../services/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-anim-create',\r\n  templateUrl: './anim-create.component.html',\r\n  styleUrls: ['./anim-create.component.css']\r\n})\r\nexport class AnimCreateComponent implements OnInit {\r\n\r\n  private meshSubscription: Subscription;\r\n  private mesh: BABYLON.AbstractMesh;\r\n\r\n  private animTarget: string;\r\n  private animName: string;\r\n  private animFps: string;\r\n  private animBehavior: string;\r\n  private easingFunction: string;\r\n  private easingMode: string;\r\n  public useEasing: boolean;\r\n\r\n  constructor(private globals: GlobalsService) {\r\n    this.meshSubscription = this.globals.selectedMesh.subscribe(this.getMesh);\r\n    this.useEasing = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    document.getElementById('setEasing').addEventListener('click', this.setEasing);\r\n    document.getElementById('animOptButton').addEventListener('click', this.getAnimInfo);\r\n  }\r\n\r\n  /**\r\n   * get the selected mesh\r\n   * @param {BABYLON.AbstractMesh} _mesh - selected mesh\r\n   */\r\n  private getMesh = (_mesh: BABYLON.AbstractMesh) => {\r\n    this.mesh = _mesh;\r\n  }\r\n\r\n  /**\r\n   * sets the state of the easing checkbox\r\n   */\r\n  private setEasing = () => {\r\n    this.useEasing = (<HTMLInputElement>document.getElementById('setEasing')).checked;\r\n  }\r\n\r\n  /**\r\n   * get the input values and call createAnimation()\r\n   */\r\n  private getAnimInfo = () => {\r\n    if (this.mesh === undefined) {\r\n      this.globals.ipcRenderer.send('show-message', 'No mesh selected', 'warning');\r\n      return;\r\n    }\r\n    this.animTarget = (<HTMLInputElement>document.getElementById('animProperty')).value;\r\n    this.animName = (<HTMLInputElement>document.getElementById('animName')).value;\r\n    this.animFps = (<HTMLInputElement>document.getElementById('animFrames')).value;\r\n    this.animBehavior = (<HTMLInputElement>document.getElementById('animBehavior')).value;\r\n    // check if name is available\r\n    if (this.animName === '') {\r\n      this.globals.ipcRenderer.send('show-message', 'The animation name is invalid', 'warning');\r\n      return;\r\n    }\r\n    const animationName = this.mesh.getAnimationByName(this.animName);\r\n    if (animationName !== null) {\r\n      this.globals.ipcRenderer.send('show-message', 'This name is not available', 'warning');\r\n      return;\r\n    }\r\n    this.createAnimation();\r\n  }\r\n\r\n  /**\r\n   * create a new animation\r\n   */\r\n  private createAnimation(): void {\r\n    const fps: number = parseInt(this.animFps, 10);\r\n    const animDataTyp: number = BABYLON.Animation.ANIMATIONTYPE_VECTOR3;\r\n    let loopmode: number;\r\n    // loop mode\r\n    switch (this.animBehavior) {\r\n      case 'relative':\r\n        loopmode = BABYLON.Animation.ANIMATIONLOOPMODE_RELATIVE;\r\n        break;\r\n      case 'cycle':\r\n        loopmode = BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE;\r\n        break;\r\n      case 'constant':\r\n        loopmode = BABYLON.Animation.ANIMATIONLOOPMODE_CONSTANT;\r\n        break;\r\n    }\r\n    // create ainmation\r\n    const newAnimation: BABYLON.Animation = new BABYLON.Animation(this.animName, this.animTarget, fps, animDataTyp, loopmode);\r\n\r\n    // define empty animation (important for the SceneSerializer)\r\n    newAnimation.setKeys([]);\r\n\r\n    // if use easing is checked, add selected easing function to animaation\r\n    if (this.useEasing) {\r\n      this.createEasing();\r\n      newAnimation.setEasingFunction(this.createEasing());\r\n    }\r\n\r\n    // add animation to mesh\r\n    this.mesh.animations.push(newAnimation);\r\n  }\r\n\r\n  /**\r\n   * create an easing function\r\n   * @returns {BABYLON.EasingFunction} a new easing function\r\n   */\r\n  private createEasing(): BABYLON.EasingFunction {\r\n    this.easingFunction = (<HTMLInputElement>document.getElementById('easingFn')).value;\r\n    this.easingMode = (<HTMLInputElement>document.getElementById('easingMode')).value;\r\n\r\n    let easingFn: BABYLON.EasingFunction;\r\n\r\n    // easing function\r\n    switch (this.easingFunction) {\r\n      case 'circle':\r\n        easingFn = new BABYLON.CircleEase();\r\n        break;\r\n      case 'back':\r\n        easingFn = new BABYLON.BackEase();\r\n        break;\r\n      case 'bounce':\r\n        easingFn = new BABYLON.BounceEase();\r\n        break;\r\n      case 'cubic':\r\n        easingFn = new BABYLON.CubicEase();\r\n        break;\r\n      case 'elastic':\r\n        easingFn = new BABYLON.ElasticEase();\r\n        break;\r\n      case 'exponential':\r\n        easingFn = new BABYLON.ExponentialEase();\r\n        break;\r\n      case 'power':\r\n        easingFn = new BABYLON.PowerEase();\r\n        break;\r\n      case 'quadratic':\r\n        easingFn = new BABYLON.QuadraticEase();\r\n        break;\r\n      case 'quartic':\r\n        easingFn = new BABYLON.QuarticEase();\r\n        break;\r\n      case 'quintic':\r\n        easingFn = new BABYLON.QuinticEase();\r\n        break;\r\n      case 'sine':\r\n        easingFn = new BABYLON.SineEase();\r\n        break;\r\n      case 'bezier':\r\n        easingFn = new BABYLON.BezierCurveEase();\r\n        break;\r\n    }\r\n\r\n    // easing mode\r\n    switch (this.easingMode) {\r\n      case 'easeIn':\r\n        easingFn.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEIN);\r\n        break;\r\n      case 'easeOut':\r\n        easingFn.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEOUT);\r\n        break;\r\n      case 'easeInOut':\r\n        easingFn.setEasingMode(BABYLON.EasingFunction.EASINGMODE_EASEINOUT);\r\n        break;\r\n    }\r\n\r\n    return easingFn;\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"#timelineDiv{\\r\\n    width: 100%;\\r\\n    overflow: auto;\\r\\n    background-color: rgb(77, 72, 76);\\r\\n}\\r\\n\\r\\n#konvaContainer {\\r\\n    width: 100%;\\r\\n    min-width: 800px;\\r\\n    height: 100px;\\r\\n}\\r\\n\\r\\n:host ::ng-deep #timelineInfo{\\r\\n    width: 100%;\\r\\n    background-color: rgb(77, 72, 76);\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n#timelineTextSpan{\\r\\n    width: 80%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.timelineButtons{\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n}\"","module.exports = \"<div id=\\\"timelineInfo\\\">\\r\\n    <!-- animation info when an animation is selected-->\\r\\n    <span *ngIf=\\\"animation\\\" class=\\\"flexItem\\\" id=\\\"timelineTextSpan\\\">\\r\\n        <span class=\\\"timelineText\\\">name: {{animation.name}}</span>\\r\\n        <span class=\\\"timelineText\\\">target: {{animation.targetProperty}}</span>\\r\\n        <span class=\\\"timelineText\\\" *ngIf=\\\"animation.getKeys().length > 0\\\">\\r\\n            last frame: {{animation.getKeys()[animation.getKeys().length - 1].frame}}\\r\\n        </span>\\r\\n        <span class=\\\"timelineText\\\" *ngIf=\\\"!animation.getKeys() || animation.getKeys().length == 0\\\">\\r\\n            last frame:\\r\\n        </span>\\r\\n        <span class=\\\"timelineText\\\" id=\\\"timelineValue\\\">value: -</span>\\r\\n    </span>\\r\\n    <!-- animation info when an animation is not selected-->\\r\\n    <span *ngIf=\\\"!animation\\\" class=\\\"flexItem\\\" id=\\\"timelineTextSpan\\\">\\r\\n        <span class=\\\"timelineText\\\">name:</span>\\r\\n        <span class=\\\"timelineText\\\">target:</span>\\r\\n        <span class=\\\"timelineText\\\">last frame:</span>\\r\\n        <span class=\\\"timelineText\\\">value:</span>\\r\\n    </span>\\r\\n\\r\\n    <!-- buttons -->\\r\\n    <span *ngIf=\\\"animation\\\" class=\\\"flexItem\\\">\\r\\n        <span *ngIf=\\\"this.animKeys.length > 0\\\">\\r\\n            <input type=\\\"image\\\" id=\\\"applyKeys\\\" class=\\\"timelineButtons\\\" src=\\\"assets/icons/check.png\\\" alt=\\\"apply\\\" (click)=\\\"getAction('add');\\\"/>\\r\\n            <input type=\\\"image\\\" id=\\\"revertKeys\\\" class=\\\"timelineButtons\\\" src=\\\"assets/icons/cancel.png\\\" alt=\\\"revert\\\" (click)=\\\"getAction('revert');\\\"/>\\r\\n        </span>\\r\\n        <input type=\\\"image\\\" id=\\\"cancelSelection\\\" class=\\\"timelineButtons\\\" src=\\\"assets/icons/ban.png\\\" alt=\\\"cancel\\\" (click)=\\\"getAction('cancel');\\\"/>\\r\\n    </span>\\r\\n</div>\\r\\n<div id=\\\"timelineDiv\\\">\\r\\n    <div id=\\\"konvaContainer\\\"></div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalsService } from '../../services/globals.service';\r\nimport * as Konva from 'konva';\r\nimport * as BABYLON from 'babylonjs';\r\n\r\n@Component({\r\n  selector: 'app-anim-timeline',\r\n  templateUrl: './anim-timeline.component.html',\r\n  styleUrls: ['./anim-timeline.component.css']\r\n})\r\nexport class AnimTimelineComponent implements OnInit {\r\n\r\n  private mesh: BABYLON.AbstractMesh;\r\n  public animation: BABYLON.Animation;\r\n  private animKeys: BABYLON.IAnimationKey[] = [];\r\n\r\n  private container: HTMLDivElement;\r\n  private stage: Konva.Stage;\r\n  private staticLayer: Konva.Layer;\r\n  private dynamicLayer: Konva.Layer;\r\n  private pointer: Konva.Rect;\r\n\r\n  private width: number;\r\n  private height: number;\r\n  private distance: number;\r\n\r\n  private linesDrawn: Konva.Rect[] = [];\r\n  private keysDrawn: string[] = [];\r\n\r\n  private minDistance: number;\r\n  private startX: number;\r\n  private framesNum;\r\n  private lineHeight;\r\n  private lineWidth;\r\n\r\n\r\n  constructor(private globals: GlobalsService) {\r\n    this.minDistance = 10;\r\n    this.startX = 5;\r\n    this.framesNum = 500;\r\n    this.lineHeight = 50;\r\n    this.lineWidth = 3;\r\n    this.globals.selectedMesh.subscribe(this.getMesh);\r\n    this.globals.selectedAnimation.subscribe(this.getAnimation);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.container = <HTMLDivElement>document.getElementById('konvaContainer');\r\n    this.container.addEventListener('mousewheel', this.scrollDiv);\r\n    // wait until other components initialize\r\n    setTimeout(() => { this.initStage(); }, 10);\r\n  }\r\n\r\n  /**\r\n   * get selected mesh\r\n   */\r\n  private getMesh = (_mesh: BABYLON.AbstractMesh) => {\r\n    this.mesh = _mesh;\r\n  }\r\n\r\n  /**\r\n   * get selected animation\r\n   * @param {strin[]} _anim - contains animation name and whether it gets added or removed\r\n   */\r\n  private getAnimation = (_anim: string[]) => {\r\n    if (_anim === undefined) {\r\n      this.animation = undefined;\r\n      this.animKeys.length = 0;\r\n      if (this.stage) {\r\n        this.deleteDrawnKeys(true);\r\n      }\r\n      return;\r\n    }\r\n    if (this.animation === undefined && _anim[1] === 'add') {\r\n      this.animation = this.mesh.getAnimationByName(_anim[0]);\r\n      this.getAnimationKeys();\r\n    } else if (this.animation !== undefined && _anim[1] === 'remove') {\r\n      if (this.animation.name === _anim[0]) {\r\n        this.animation = undefined;\r\n        this.animKeys.length = 0;\r\n        this.deleteDrawnKeys(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get the keyframes of the animation\r\n   */\r\n  private getAnimationKeys(): void {\r\n    const animationKeys: BABYLON.IAnimationKey[] = this.animation.getKeys();\r\n    if (animationKeys) {\r\n      this.animKeys = animationKeys.slice(0);       // get a copy of the animation key array\r\n      let frame: number;\r\n      let value: BABYLON.Vector3;\r\n      let xPos: number;\r\n\r\n      for (let index = 0; index < animationKeys.length; index++) {\r\n        frame = animationKeys[index].frame;\r\n        value = animationKeys[index].value;\r\n        xPos = this.linesDrawn[frame].x();\r\n        this.drawOldKeys(xPos, frame, value.toString());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reacts to the click events. Gets called from the html template.\r\n   * @param {strin} _action - add / revert / cancel\r\n   */\r\n  private getAction = (_action: string) => {\r\n    switch (_action) {\r\n      case 'cancel':\r\n        this.animation = undefined;\r\n        this.animKeys.length = 0;\r\n        this.deleteDrawnKeys(true);\r\n        break;\r\n      case 'add':\r\n        if (this.animation && this.animKeys.length !== 0) {\r\n          this.animKeys = this.animKeys.sort((a, b) => a.frame - b.frame);  // sort keys numerically\r\n          this.animation.setKeys(this.animKeys);\r\n          this.animKeys.length = 0;\r\n          this.deleteDrawnKeys(true);\r\n          this.getAnimationKeys();\r\n        }\r\n        break;\r\n      case 'revert':\r\n        this.animKeys.length = 0;\r\n        this.deleteDrawnKeys(false);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * scroll horizontally\r\n   *  @param {MouseWheelEvent} _event\r\n   */\r\n  private scrollDiv = (_event: MouseWheelEvent) => {\r\n    _event.preventDefault();\r\n    const target: HTMLDivElement = <HTMLDivElement>this.container.parentElement;\r\n    const deltaY: number = _event.deltaY;\r\n    target.scrollLeft += deltaY;\r\n  }\r\n\r\n  /**\r\n   * initiate the stage with 2 layer and drawn lines\r\n   */\r\n  private initStage(): void {\r\n    this.width = this.container.clientWidth;\r\n    this.height = this.container.clientHeight;\r\n\r\n    this.stage = new Konva.Stage({\r\n      container: this.container.id,\r\n      width: this.width,\r\n      height: this.height\r\n    });\r\n\r\n    this.staticLayer = new Konva.Layer();\r\n    this.dynamicLayer = new Konva.Layer();\r\n    this.stage.add(this.staticLayer);\r\n    this.stage.add(this.dynamicLayer);\r\n\r\n    this.drawLines(this.framesNum);\r\n    this.drawPointer();\r\n    this.drawHorizontalLine(52);\r\n    this.drawHorizontalLine(75);\r\n  }\r\n\r\n\r\n  /**\r\n   * draw the old keyframes of the animation\r\n   * @param {number} _x - position of the key in the timeline\r\n   * @param {number} _frame - frame of the keyframe\r\n   * @param {number} _data - value of the keyframe\r\n   */\r\n  private drawOldKeys(_x: number, _frame: number, _data: string): void {\r\n    const w = 10;\r\n    const y = 55;\r\n    const color = 'rgb(253, 46, 98)';\r\n    const id: string = 'oldKey' + _frame.toString();\r\n    const data: string = _data;\r\n\r\n    const poly = new Konva.Line({\r\n      points: [_x, y, _x + w, y + w, _x, y + (2 * w), _x - w, y + w],\r\n      fill: color,\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      closed: true,\r\n      id: id,\r\n      name: data\r\n    });\r\n\r\n    // event: delete symbol + keyframe\r\n    poly.on('click', () => {\r\n      poly.destroy();\r\n      if (this.keysDrawn.indexOf(id) !== -1) {\r\n        this.keysDrawn.splice(this.keysDrawn.indexOf(id), 1);\r\n        this.deleteAnimKey(poly.id().replace('oldKey', ''));\r\n      }\r\n      this.showKeyValue(null);\r\n      this.dynamicLayer.draw();\r\n    });\r\n    // event: show tooltip\r\n    poly.on('mouseenter', () => {\r\n      this.showKeyValue(poly.name());\r\n    });\r\n    // event: hide tooltip\r\n    poly.on('mouseleave', () => {\r\n      this.showKeyValue(null);\r\n    });\r\n\r\n    this.keysDrawn.push(id);\r\n    this.dynamicLayer.add(poly);\r\n    this.dynamicLayer.draw();\r\n  }\r\n\r\n  /**\r\n   * draw pointer\r\n   */\r\n  private drawPointer(): void {\r\n    this.pointer = new Konva.Rect({\r\n      x: 0,\r\n      y: 0,\r\n      width: this.lineWidth,\r\n      height: this.height,\r\n      fill: 'red',\r\n      stroke: 'red',\r\n      strokeWidth: 1,\r\n    });\r\n    // custom hit box is bigger than the standard\r\n    this.pointer.hitFunc((context) => {\r\n      const xStart: number = -(this.distance - 4);\r\n      const xEnd: number = this.pointer.width() + (xStart * (-2));\r\n      context.beginPath();\r\n      context.rect(xStart, 0, xEnd, this.height);\r\n      context.closePath();\r\n      context.fillStrokeShape(this.pointer);\r\n    });\r\n    // event: create key at pointer position\r\n    this.pointer.on('click', () => {\r\n      if (this.mesh === undefined) {\r\n        this.globals.ipcRenderer.send('show-message', 'No mesh selected', 'warning');\r\n        return;\r\n      }\r\n      if (this.animation !== undefined) {\r\n        const xPos: number = this.pointer.position().x;\r\n        const data: number[] = [];\r\n\r\n        // save the position/rotation/scaling of the mesh\r\n        switch (this.animation.targetProperty) {\r\n          case 'rotation':\r\n            if (this.mesh.rotationQuaternion !== null && this.mesh.rotationQuaternion !== undefined) {\r\n              data[0] = this.mesh.rotationQuaternion.toEulerAngles().x;\r\n              data[1] = this.mesh.rotationQuaternion.toEulerAngles().y;\r\n              data[2] = this.mesh.rotationQuaternion.toEulerAngles().z;\r\n            } else {\r\n              data[0] = this.mesh.rotation.x;\r\n              data[1] = this.mesh.rotation.y;\r\n              data[2] = this.mesh.rotation.z;\r\n            }\r\n            break;\r\n          case 'scaling':\r\n            data[0] = this.mesh.scaling.x;\r\n            data[1] = this.mesh.scaling.y;\r\n            data[2] = this.mesh.scaling.z;\r\n            break;\r\n          default:\r\n            data[0] = this.mesh.position.x;\r\n            data[1] = this.mesh.position.y;\r\n            data[2] = this.mesh.position.z;\r\n            break;\r\n        }\r\n        const dataDisplay: string = '{ X: ' + data[0] + ' Y: ' + data[1] + ' Z: ' + data[2] + ' }';\r\n        this.drawKey(xPos, this.pointer.name(), dataDisplay);\r\n        this.addAnimKey(this.pointer.name(), data);\r\n      } else {\r\n        this.globals.ipcRenderer.send('show-message', 'No animation selected', 'warning');\r\n      }\r\n    });\r\n    // add to layer\r\n    this.dynamicLayer.add(this.pointer);\r\n    this.dynamicLayer.draw();\r\n  }\r\n\r\n  /**\r\n   * resize the container and stage\r\n   *  @param {number} _width - new width of stage\r\n   */\r\n  private resizeStage(_width: number): void {\r\n    this.container.setAttribute('style', 'width:' + _width.toString() + 'px;');\r\n    this.width = this.container.clientWidth;\r\n    this.stage.width(this.width);\r\n  }\r\n\r\n  /**\r\n   * draw the lines and numbers for the frames\r\n   *  @param {number} _amount - the max frame value\r\n   */\r\n  private drawLines(_amount: number): void {\r\n    let xPos: number = this.startX;\r\n    this.distance = Math.round(this.width / _amount);\r\n    let simpleText: Konva.Text;\r\n\r\n    if (this.distance < this.minDistance) {\r\n      this.distance = this.minDistance;\r\n    }\r\n\r\n    for (let index = 0; index <= _amount; index++) {\r\n      if (index % 10 === 0) {\r\n        this.linesDrawn[index] = new Konva.Rect({\r\n          x: xPos,\r\n          y: 0,\r\n          width: this.lineWidth,\r\n          height: (this.lineHeight * 0.8),\r\n          fill: 'black',\r\n          stroke: 'black',\r\n          strokeWidth: 1,\r\n        });\r\n        simpleText = new Konva.Text({\r\n          x: xPos,\r\n          y: this.lineHeight - 10,\r\n          text: index.toString(),\r\n          fontSize: 12,\r\n          fontFamily: 'Calibri',\r\n          fill: 'white'\r\n        });\r\n        // text align\r\n        simpleText.offsetX(simpleText.getWidth() / 2);\r\n      } else if (index % 5 === 0) {\r\n        this.linesDrawn[index] = new Konva.Rect({\r\n          x: xPos,\r\n          y: 0,\r\n          width: this.lineWidth,\r\n          height: (this.lineHeight * 0.6),\r\n          fill: 'black',\r\n          stroke: 'black',\r\n          strokeWidth: 1,\r\n        });\r\n      } else {\r\n        this.linesDrawn[index] = new Konva.Rect({\r\n          x: xPos,\r\n          y: 0,\r\n          width: this.lineWidth,\r\n          height: (this.lineHeight * 0.5),\r\n          fill: 'black',\r\n          stroke: 'black',\r\n          strokeWidth: 1,\r\n        });\r\n      }\r\n      // custom hit box: longer than the line itself\r\n      this.linesDrawn[index].hitFunc((context) => {\r\n        context.beginPath();\r\n        context.rect(0, 0, this.lineWidth, this.height);\r\n        context.closePath();\r\n        context.fillStrokeShape(this.linesDrawn[index]);\r\n      });\r\n      // event: pointer saves the frame of the line in the name property\r\n      this.linesDrawn[index].on('mouseover', () => {\r\n        const pos: number = this.linesDrawn[index].position().x;\r\n        this.pointer.x(pos);\r\n        this.pointer.name(index.toString());\r\n        this.dynamicLayer.draw();\r\n      });\r\n      // add to layer\r\n      this.staticLayer.add(simpleText);\r\n      this.staticLayer.add(this.linesDrawn[index]);\r\n      xPos += this.distance;\r\n    }\r\n    // draw layer\r\n    this.staticLayer.draw();\r\n\r\n    // check size\r\n    if (xPos > (this.width + this.distance)) {\r\n      this.resizeStage(xPos);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * draw the new keys in the timeline\r\n   * @param {number} _x - position the key will be drawn\r\n   * @param {number} _frame - frame of the keyframe\r\n   * @param {number} _data - value of the keyframe\r\n   */\r\n  private drawKey(_x: number, _frame: string, _data: string): void {\r\n    const w = 10;\r\n    const y = 75;\r\n    const color = '#00D2FF';\r\n    const id: string = _frame;\r\n    const data: string = _data;\r\n\r\n    // check if key already exists\r\n    // if true create new key and save id in keyArray, else show on top of the layer\r\n    if (this.keysDrawn.indexOf(id) === -1) {\r\n      const poly = new Konva.Line({\r\n        points: [_x, y, _x + w, y + w, _x, y + (2 * w), _x - w, y + w],\r\n        fill: color,\r\n        stroke: 'black',\r\n        strokeWidth: 2,\r\n        closed: true,\r\n        id: id,\r\n        name: data\r\n      });\r\n\r\n      // event: show value\r\n      poly.on('mouseenter', () => {\r\n        this.showKeyValue(poly.name());\r\n      });\r\n      // event: hide value\r\n      poly.on('mouseleave', () => {\r\n        this.showKeyValue(null);\r\n      });\r\n      // event: delete symbol + keyframe and hide value\r\n      poly.on('click', () => {\r\n        poly.destroy();\r\n        if (this.keysDrawn.indexOf(id) !== -1) {\r\n          this.keysDrawn.splice(this.keysDrawn.indexOf(id), 1);\r\n          this.deleteAnimKey(poly.id());\r\n        }\r\n        this.showKeyValue(null);\r\n        this.dynamicLayer.draw();\r\n      });\r\n      // add to keysDrawn array\r\n      this.keysDrawn.push(id);\r\n      // add too layer\r\n      this.dynamicLayer.add(poly);\r\n    } else {\r\n      const shape: Konva.Shape = this.stage.find('#' + id)[0];\r\n      shape.moveToTop();\r\n    }\r\n    this.dynamicLayer.draw();\r\n  }\r\n\r\n  /**\r\n   * delete drawn keys from the timeline\r\n   * @param {boolean} _deleteAll - true = delete old and new keys from timeline false= only new keys\r\n   */\r\n  private deleteDrawnKeys(_deleteAll: boolean): void {\r\n    let col: Konva.Collection;\r\n    if (_deleteAll) {\r\n      col = this.stage.find('Line');\r\n    } else {\r\n      col = this.dynamicLayer.find('Line');\r\n    }\r\n\r\n    col.each((el) => {\r\n      el.destroy();\r\n    });\r\n    this.keysDrawn.length = 0;\r\n\r\n    if (_deleteAll) {\r\n      this.staticLayer.draw();\r\n      this.dynamicLayer.draw();\r\n    } else {\r\n      this.dynamicLayer.draw();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * add a new keyframe to the animKey array\r\n   * @param {string} _frame - frame of the  new keyframe\r\n   * @param {number[]} _values - value of the new keyframe\r\n   */\r\n  private addAnimKey(_frame: string, _values: number[]): void {\r\n    const frame: number = parseInt(_frame, 10);\r\n    const value: BABYLON.Vector3 = new BABYLON.Vector3(_values[0], _values[1], _values[2]);\r\n    // delete the old entry if frame already exists in array\r\n    for (let i = 0; i < this.animKeys.length; i++) {\r\n      if (this.animKeys[i].frame === frame) {\r\n        this.animKeys.splice(i, 1);\r\n      }\r\n    }\r\n    this.animKeys.push({\r\n      frame: frame,\r\n      value: value\r\n    });\r\n  }\r\n\r\n  /**\r\n   * delete keyframe from animKey array\r\n   * @param {string} _frame - frame of the keyframe\r\n   */\r\n  private deleteAnimKey(_frame: string): void {\r\n    const frame: number = parseInt(_frame, 10);\r\n    for (let i = 0; i < this.animKeys.length; i++) {\r\n      if (this.animKeys[i].frame === frame) {\r\n        this.animKeys.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * draw a horizontal line\r\n   * @param {number} _y - y position of the line\r\n   */\r\n  private drawHorizontalLine(_y: number): void {\r\n    const line: Konva.Rect = new Konva.Rect({\r\n      x: 0,\r\n      y: _y,\r\n      width: this.width,\r\n      stroke: 'black',\r\n      strokeWidth: 3,\r\n      opacity: 0.7\r\n    });\r\n    this.staticLayer.add(line);\r\n    line.moveToBottom();\r\n    this.staticLayer.draw();\r\n  }\r\n\r\n  /**\r\n   * show the value of selected keyframe in the infobox\r\n   * @param {string} _content - value of the keyframe\r\n   */\r\n  private showKeyValue(_content: string): void {\r\n    if (_content === null) {\r\n      document.getElementById('timelineValue').innerHTML = 'value: -';\r\n    } else {\r\n      document.getElementById('timelineValue').innerHTML = 'value: ' + _content;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"#animField {\\r\\n    width: 100%;\\r\\n    overflow: auto;\\r\\n    border: solid 1px white;\\r\\n}\\r\\n\\r\\nfieldset {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n:host ::ng-deep .animInfo {\\r\\n    padding-left: 10px;\\r\\n}\\r\\n\\r\\n.trashButton {\\r\\n    margin-right: 1px;\\r\\n    width: 15px;\\r\\n    height: 15px;\\r\\n}\"","module.exports = \"<legend>Animations</legend>\\r\\n<div id=\\\"animField\\\" >\\r\\n  <fieldset open>\\r\\n    <div *ngIf=\\\"mesh\\\">\\r\\n      <div *ngIf=\\\"mesh.animations.length !== 0\\\">\\r\\n        <details *ngFor=\\\"let anim of mesh.animations\\\">\\r\\n          <!-- name of animation -->\\r\\n          <summary (click)=\\\"getAnimation($event);\\\">\\r\\n            <input type=\\\"image\\\" class=\\\"trashButton\\\" src=\\\"assets/icons/trash.png\\\" alt=\\\"delete\\\" (click)=\\\"deleteAnim($event);\\\" />\\r\\n            <span>{{anim.name}}</span>\\r\\n          </summary>\\r\\n          <!-- animation target -->\\r\\n          <span class=\\\"animInfo\\\">typ: {{anim.targetProperty}} </span>\\r\\n          <!-- show all frames -->\\r\\n          <details class=\\\"animInfo\\\">\\r\\n            <summary>frames</summary>\\r\\n            <details *ngFor=\\\"let key of anim.getKeys()\\\" class=\\\"animInfo\\\">\\r\\n              <summary>{{key.frame}}</summary>\\r\\n              <span class=\\\"animInfo\\\">({{key.value.x}}|{{key.value.y}}|{{key.value.z}})</span>\\r\\n            </details>\\r\\n          </details>\\r\\n        </details>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"mesh.animations.length === 0\\\">\\r\\n        empty\\r\\n      </div>\\r\\n    </div>\\r\\n  </fieldset>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AbstractMesh, Animation } from 'babylonjs';\r\nimport { GlobalsService } from '../../services/globals.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-animation-display',\r\n  templateUrl: './animation-display.component.html',\r\n  styleUrls: ['./animation-display.component.css']\r\n})\r\nexport class AnimationDisplayComponent implements OnInit, OnDestroy {\r\n\r\n  public mesh: AbstractMesh;\r\n  private selectedMeshSubscription: Subscription;\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnInit() {\r\n    this.selectedMeshSubscription = this.globals.selectedMesh.subscribe(this.getSelectedMesh);\r\n  }\r\n\r\n  /**\r\n   * get selected mesh\r\n   * @param {AbstractMesh} _mesh - selected mesh\r\n   */\r\n  private getSelectedMesh = (_mesh: AbstractMesh) => {\r\n    this.mesh = _mesh;\r\n  }\r\n\r\n  /**\r\n   * Get selected animation. Gets called from the html template.\r\n   * @param {MouseEvent} _event\r\n   */\r\n  private getAnimation = (_event: MouseEvent) => {\r\n    const span: HTMLSummaryElement = <HTMLSummaryElement>_event.currentTarget;\r\n    const animName: string = (<HTMLSpanElement>span.lastChild).innerHTML;\r\n    // emit animation name\r\n    this.globals.selectedAnimation.next([animName, 'add']);\r\n  }\r\n\r\n  /**\r\n   * Delete animation. Gets called from the html template.\r\n   * @param {MouseEvent} _event\r\n   */\r\n  private deleteAnim = (_event: MouseEvent) => {\r\n    const target: HTMLElement = <HTMLElement>_event.target;\r\n    const animName: string = target.parentElement.lastElementChild.innerHTML;\r\n    const meshAnimations: Animation[] = this.mesh.animations;\r\n    const animtable: BABYLON.Animatable = this.globals.scene.getAnimatableByTarget(this.mesh);\r\n\r\n    this.globals.selectedAnimation.next([animName, 'remove']);\r\n\r\n    for (let index = 0; index < meshAnimations.length; index++) {\r\n      const element = meshAnimations[index];\r\n      // stop animation if it is playing\r\n      if (element.name === animName) {\r\n        if (animtable) {\r\n          animtable.stop();\r\n          animtable.reset();\r\n        }\r\n        // delete animation\r\n        meshAnimations.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.selectedMeshSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \".animRange {\\r\\n    width: 3em;\\r\\n}\\r\\n\\r\\n.playerBtn {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    margin: 0 2px;\\r\\n}\\r\\n\\r\\n.playerBtn:hover{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nspan{\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n  <section>\\r\\n    <input type=\\\"image\\\" src=\\\"assets/icons/play.png\\\" alt=\\\"revert\\\" id=\\\"play\\\" class=\\\"playerBtn\\\" value=\\\"play\\\" />\\r\\n    <input type=\\\"image\\\" src=\\\"assets/icons/pause.png\\\" alt=\\\"revert\\\" id=\\\"pause\\\" class=\\\"playerBtn\\\" value=\\\"pause\\\" />\\r\\n    <input type=\\\"image\\\" src=\\\"assets/icons/stop.png\\\" alt=\\\"revert\\\" id=\\\"stop\\\" class=\\\"playerBtn\\\" value=\\\"stop\\\" />\\r\\n    <input type=\\\"image\\\" src=\\\"assets/icons/backwards.png\\\" alt=\\\"revert\\\" id=\\\"reset\\\" class=\\\"playerBtn\\\" value=\\\"reset\\\" />\\r\\n    <br>\\r\\n    <span>\\r\\n      <label for=\\\"startFrame\\\"> start: </label>\\r\\n      <input type=\\\"number\\\" id=\\\"startFrame\\\" class=\\\"animRange\\\" value=\\\"0\\\" min=\\\"0\\\" step=\\\"1\\\">\\r\\n    </span>\\r\\n    <span>\\r\\n      <label for=\\\"endFrame\\\"> end: </label>\\r\\n      <input type=\\\"number\\\" id=\\\"endFrame\\\" class=\\\"animRange\\\" value=\\\"100\\\" min=\\\"0\\\" step=\\\"1\\\">\\r\\n    </span>\\r\\n\\r\\n  </section>\\r\\n</fieldset>\"","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalsService } from '../../services/globals.service';\r\nimport { AbstractMesh, Animatable } from 'babylonjs';\r\n\r\n@Component({\r\n  selector: 'app-player',\r\n  templateUrl: './player.component.html',\r\n  styleUrls: ['./player.component.css']\r\n})\r\nexport class PlayerComponent implements OnInit {\r\n\r\n  private mesh: AbstractMesh;\r\n  private player: Animatable;\r\n  private startFrame: number;\r\n  private endFrame: number;\r\n\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnInit() {\r\n    document.getElementById('play').addEventListener('click', this.playerController);\r\n    document.getElementById('pause').addEventListener('click', this.playerController);\r\n    document.getElementById('stop').addEventListener('click', this.playerController);\r\n    document.getElementById('reset').addEventListener('click', this.playerController);\r\n\r\n    this.globals.selectedMesh.subscribe(this.getMesh);\r\n  }\r\n\r\n  /**\r\n   * get selected mesh\r\n   * @param {BABYLON.AbstractMesh} _mesh\r\n   */\r\n  private getMesh = (_mesh: BABYLON.AbstractMesh) => {\r\n    this.mesh = _mesh;\r\n  }\r\n\r\n  /**\r\n   * control animation\r\n   * @param {Event} _event\r\n   */\r\n  private playerController = (_event: Event) => {\r\n    const target: HTMLElement = <HTMLElement>_event.target;\r\n\r\n    if (this.mesh === undefined) {\r\n      return;\r\n    }\r\n\r\n    // get current running animatables of target mesh\r\n    if (this.globals.scene.getAnimatableByTarget(this.mesh)) {\r\n      this.player = this.globals.scene.getAnimatableByTarget(this.mesh);\r\n    }\r\n\r\n    switch (target.id) {\r\n      case 'play':\r\n        this.startFrame = (<HTMLInputElement>document.getElementById('startFrame')).valueAsNumber;\r\n        this.endFrame = (<HTMLInputElement>document.getElementById('endFrame')).valueAsNumber;\r\n        this.player = this.globals.scene.beginAnimation(this.mesh, this.startFrame, this.endFrame, true);\r\n        break;\r\n      case 'pause':\r\n        if (this.player.animationStarted) {\r\n          this.player.pause();\r\n        } else {\r\n          this.player.restart();\r\n        }\r\n        break;\r\n      case 'stop':\r\n        this.player.stop();\r\n        break;\r\n      case 'reset':\r\n        this.player.reset();\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \":host {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-evenly;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n#hierarchyContainer {\\r\\n    width: 8%;\\r\\n    max-height: 99vh;\\r\\n}\\r\\n\\r\\n#canvasContainer{\\r\\n    width: 80%;\\r\\n}\"","module.exports = \"<div id=\\\"hierarchyContainer\\\">\\r\\n    <app-hierarchy></app-hierarchy>\\r\\n    <app-animation-display></app-animation-display>\\r\\n</div>\\r\\n<div id=\\\"canvasContainer\\\">\\r\\n    <app-canvas></app-canvas>\\r\\n    <app-anim-timeline></app-anim-timeline>\\r\\n</div>\\r\\n<app-editor></app-editor>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CanvasComponent } from './canvas/canvas.component';\r\nimport { EditorComponent } from './editor/editor.component';\r\nimport { HierarchyComponent } from './editor/hierarchy/hierarchy.component';\r\nimport { TransformComponent } from './editor/transform/transform.component';\r\nimport { MaterialComponent } from './editor/material/material.component';\r\n\r\nimport { NgxElectronModule } from 'ngx-electron';\r\n\r\nimport { MeshesComponent } from './editor/meshes/meshes.component';\r\nimport { BoxComponent } from './editor/meshes/box/box.component';\r\nimport { SphereComponent } from './editor/meshes/sphere/sphere.component';\r\nimport { CylinderComponent } from './editor/meshes/cylinder/cylinder.component';\r\nimport { PlaneComponent } from './editor/meshes/plane/plane.component';\r\nimport { DiscComponent } from './editor/meshes/disc/disc.component';\r\nimport { TorusComponent } from './editor/meshes/torus/torus.component';\r\nimport { GroundComponent } from './editor/meshes/ground/ground.component';\r\n\r\nimport { GlobalsService } from './services/globals.service';\r\nimport { PlayerComponent } from './animation/player/player.component';\r\nimport { AnimationDisplayComponent } from './animation/animation-display/animation-display.component';\r\nimport { AnimTimelineComponent } from './animation/anim-timeline/anim-timeline.component';\r\nimport { AnimCreateComponent } from './animation/anim-create/anim-create.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CanvasComponent,\r\n    EditorComponent,\r\n    HierarchyComponent,\r\n    TransformComponent,\r\n    MaterialComponent,\r\n    MeshesComponent,\r\n    BoxComponent,\r\n    SphereComponent,\r\n    CylinderComponent,\r\n    PlaneComponent,\r\n    DiscComponent,\r\n    TorusComponent,\r\n    GroundComponent,\r\n    PlayerComponent,\r\n    AnimationDisplayComponent,\r\n    AnimTimelineComponent,\r\n    AnimCreateComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxElectronModule\r\n  ],\r\n  providers: [\r\n    GlobalsService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"#renderCanvas { \\r\\n    width: 100%; \\r\\n    height: 800px;\\r\\n    float: left;\\r\\n}\"","module.exports = \"<canvas id=\\\"renderCanvas\\\"></canvas>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport * as BABYLON from 'babylonjs';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { GlobalsService } from '../services/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-canvas',\r\n  templateUrl: './canvas.component.html',\r\n  styleUrls: ['./canvas.component.css']\r\n})\r\nexport class CanvasComponent implements OnInit, OnDestroy {\r\n\r\n  private engine: BABYLON.Engine;\r\n  private canvas: HTMLCanvasElement;\r\n  private scene: BABYLON.Scene;\r\n  private camera: BABYLON.Camera;\r\n\r\n  private utilLayer: BABYLON.UtilityLayerRenderer;\r\n  private positionGizmo: BABYLON.PositionGizmo;\r\n  private rotationGizmo: BABYLON.RotationGizmo;\r\n  private scalingGizmo: BABYLON.ScaleGizmo;\r\n  private activGizmo: BABYLON.Gizmo;\r\n\r\n  private selectedMeshSubscription: Subscription;\r\n\r\n  private highlightedMesh: BABYLON.AbstractMesh;\r\n  private scenePath: string;\r\n\r\n\r\n  constructor(private globals: GlobalsService) {\r\n    this.scenePath = '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.canvas = <HTMLCanvasElement>document.getElementById('renderCanvas');\r\n    this.engine = new BABYLON.Engine(this.canvas, true, { stencil: true });\r\n    this.engine.enableOfflineSupport = false;\r\n\r\n    this.initScene();\r\n\r\n    ///////////////////////// events /////////////////////////\r\n    window.addEventListener('resize', this.resizeEngine);\r\n    this.canvas.addEventListener('click', this.pickMesh);\r\n\r\n    const buttons = document.getElementsByClassName('buttons');\r\n    for (let index = 0; index < buttons.length; index++) {\r\n      buttons[index].addEventListener('click', this.changeEditMode);\r\n    }\r\n    // subscribe to get the selected mesh\r\n    this.selectedMeshSubscription = this.globals.selectedMesh.subscribe(this.receiveSelectedMesh);\r\n\r\n    ///////////////////////// ipc /////////////////////////\r\n    this.globals.ipcRenderer.on('delete-mesh', this.removeMesh);\r\n    this.globals.ipcRenderer.on('reset-mesh', this.resetMesh);\r\n    this.globals.ipcRenderer.on('reset-camera', this.resetCamera);\r\n    this.globals.ipcRenderer.on('edit-mode', this.changeEditMode);\r\n    this.globals.ipcRenderer.on('save-request', this.saveScene);\r\n    this.globals.ipcRenderer.on('load-request', this.loadScene);\r\n    this.globals.ipcRenderer.on('new-scene-request', this.newScene);\r\n  }\r\n\r\n\r\n  /*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  *                                        event handler\r\n  */////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /**\r\n   * creates a new scene\r\n   * @param {Event} _event\r\n   */\r\n  private newScene = (_event: Event) => {\r\n    this.scenePath = '';\r\n    this.initScene();\r\n  }\r\n\r\n  /**\r\n   * saves the scene and shows an info dialog if successful\r\n   * @param {Event} _event\r\n   * @param {boolean} _save - true = save false= save as\r\n   */\r\n  private saveScene = (_event: Event, _save: boolean) => {\r\n    let success: boolean;\r\n    // destroy the gizmos to make sure it is not saved as well\r\n    this.destroyUtilGizmo();\r\n\r\n    const serialize = BABYLON.SceneSerializer.Serialize(this.scene);\r\n    const json: string = JSON.stringify(serialize);\r\n\r\n    if (_save) {\r\n      success = this.globals.ipcRenderer.sendSync('save-scene', json);\r\n    } else {\r\n      success = this.globals.ipcRenderer.sendSync('saveAs-scene', json);\r\n    }\r\n\r\n    if (success) {\r\n      this.globals.ipcRenderer.send('show-message', 'Scene is saved successfully', 'info');\r\n      this.initUtilGizmos();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * loads a  scene\r\n   */\r\n  private loadScene = (_event: Event) => {\r\n    const path: string = this.globals.ipcRenderer.sendSync('load-scene');\r\n    if (path) {\r\n      this.scenePath = path;\r\n      this.initScene();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * prevents the distortion of the engine after resizing the window\r\n   */\r\n  private resizeEngine = () => {\r\n    this.engine.resize();\r\n  }\r\n\r\n  /**\r\n   * pick collisions\r\n   */\r\n  private pickMesh = () => {\r\n    const pickResult = this.scene.pick(this.scene.pointerX, this.scene.pointerY);\r\n    if (pickResult.hit) {\r\n      const pickedMesh = pickResult.pickedMesh;\r\n      this.highlightMesh(pickedMesh);\r\n      this.showGizmo(pickedMesh);\r\n      this.globals.selectedMesh.next(pickedMesh);\r\n    } else {\r\n      this.removeHighlight();\r\n      this.showGizmo(null);\r\n      this.globals.selectedMesh.next(undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * receive the selected mesh and inform the main process\r\n   */\r\n  private receiveSelectedMesh = (_mesh: BABYLON.AbstractMesh) => {\r\n    if (_mesh) {\r\n      this.highlightMesh(_mesh);\r\n      this.showGizmo(_mesh);\r\n      this.globals.ipcRenderer.send('send-mesh-selected', true);\r\n    } else {\r\n      this.globals.ipcRenderer.send('send-mesh-selected', false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * change between translation, ratotation and scaling\r\n   */\r\n  public changeEditMode = (_event: Event, _mode: string = '') => {\r\n    if (_mode === '') {\r\n      const target: HTMLInputElement = <HTMLInputElement>_event.target;\r\n      _mode = target.id;\r\n    }\r\n    switch (_mode.toLowerCase()) {\r\n      case 'translation':\r\n        if (this.activGizmo !== this.positionGizmo) {\r\n          this.positionGizmo.attachedMesh = this.highlightedMesh;\r\n          this.showGizmo(null);\r\n          this.activGizmo = this.positionGizmo;\r\n        }\r\n        break;\r\n      case 'rotation':\r\n        if (this.activGizmo !== this.rotationGizmo) {\r\n          this.rotationGizmo.attachedMesh = this.highlightedMesh;\r\n          this.showGizmo(null);\r\n          this.activGizmo = this.rotationGizmo;\r\n        }\r\n        break;\r\n      case 'scaling':\r\n        if (this.activGizmo !== this.scalingGizmo) {\r\n          this.scalingGizmo.attachedMesh = this.highlightedMesh;\r\n          this.showGizmo(null);\r\n          this.activGizmo = this.scalingGizmo;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * delete selected mesh\r\n   */\r\n  private removeMesh = (_event: Event) => {\r\n    this.highlightedMesh.dispose();\r\n    this.globals.selectedMesh.next(undefined);\r\n    this.globals.sceneTree.next([this.highlightedMesh.name, 'remove']);\r\n    this.highlightedMesh = undefined;\r\n    this.showGizmo(null);\r\n  }\r\n\r\n  /**\r\n   * reset selected mesh\r\n   */\r\n  private resetMesh = (_event: Event) => {\r\n    this.highlightedMesh.position = new BABYLON.Vector3(0, 0, 0);\r\n    this.highlightedMesh.rotationQuaternion = BABYLON.Quaternion.Zero();\r\n    this.highlightedMesh.scaling = new BABYLON.Vector3(1, 1, 1);\r\n  }\r\n\r\n  /**\r\n   * restore camera position\r\n   */\r\n  private resetCamera = (_event: Event) => {\r\n    this.camera.restoreState();\r\n  }\r\n\r\n  /*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  *                                         methods\r\n  */////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /**\r\n   * initiate either a new or an existing scene\r\n   */\r\n  private initScene(): void {\r\n\r\n    this.deleteScene();\r\n\r\n    // new scene\r\n    if (this.scenePath === '') {\r\n      this.scene = new BABYLON.Scene(this.engine);\r\n      this.globals.scene = this.scene;\r\n\r\n      // camera\r\n      this.camera = new BABYLON.ArcRotateCamera('arcCamera', -Math.PI / 2, Math.PI / 4, 15, BABYLON.Vector3.Zero(), this.scene);\r\n      this.camera.attachControl(this.canvas);\r\n      this.camera.storeState();\r\n\r\n      // light\r\n      const light: BABYLON.HemisphericLight = new BABYLON.HemisphericLight('light', new BABYLON.Vector3(0, 1, 0), this.scene);\r\n\r\n      // ground\r\n      const ground: BABYLON.Mesh = BABYLON.MeshBuilder.CreateGround('ground', { width: 10, height: 10, subdivisions: 4 }, this.scene);\r\n      this.globals.sceneTree.next([ground.name, 'add']);\r\n\r\n      this.initUtilGizmos();\r\n\r\n    } else {\r\n      // load scene\r\n      BABYLON.SceneLoader.Load(this.scenePath, '', this.engine, (_scene: BABYLON.Scene) => {\r\n        this.scene = _scene;\r\n        this.globals.scene = this.scene;\r\n\r\n        this.camera = this.scene.activeCamera;\r\n        this.camera.attachControl(this.canvas);\r\n        this.camera.storeState();\r\n\r\n        // add meshes to scene graph\r\n        for (let index = 0; index < this.scene.meshes.length; index++) {\r\n          if (this.scene.meshes[index].parent) {\r\n            this.globals.sceneTree.next([this.scene.meshes[index].name, 'add', this.scene.meshes[index].parent.name]);\r\n          } else {\r\n            this.globals.sceneTree.next([this.scene.meshes[index].name, 'add']);\r\n          }\r\n        }\r\n\r\n        this.initUtilGizmos();\r\n      });\r\n    }\r\n\r\n    this.engine.runRenderLoop(() => {\r\n      this.scene.render();\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * clean up and delete the scene\r\n   */\r\n  private deleteScene(): void {\r\n    this.globals.sceneTree.next(undefined);\r\n    this.globals.selectedMesh.next(undefined);\r\n    this.globals.selectedAnimation.next(undefined);\r\n    this.highlightedMesh = undefined;\r\n    if (this.scene) {\r\n      this.scene.dispose();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * highlight the selected mesh\r\n   */\r\n  private highlightMesh(_mesh: BABYLON.AbstractMesh): void {\r\n    this.removeHighlight();\r\n    _mesh.enableEdgesRendering();\r\n    _mesh.edgesWidth = 5;\r\n    _mesh.edgesColor = new BABYLON.Color4(255, 0, 0, 1);\r\n    this.highlightedMesh = _mesh;\r\n  }\r\n\r\n  /**\r\n   * remove the highlight of the last selected mesh\r\n   */\r\n  private removeHighlight(): void {\r\n    if (this.highlightedMesh !== undefined) {\r\n      this.highlightedMesh.disableEdgesRendering();\r\n    }\r\n    this.highlightedMesh = undefined;\r\n  }\r\n\r\n  /**\r\n   * init utilityLayer and gizmos\r\n   */\r\n  private initUtilGizmos(): void {\r\n    this.utilLayer = new BABYLON.UtilityLayerRenderer(this.scene);\r\n    this.positionGizmo = new BABYLON.PositionGizmo(this.utilLayer);\r\n    this.rotationGizmo = new BABYLON.RotationGizmo(this.utilLayer);\r\n    this.scalingGizmo = new BABYLON.ScaleGizmo(this.utilLayer);\r\n\r\n    this.activGizmo = this.positionGizmo;\r\n  }\r\n\r\n  /**\r\n   * show/hide gizmo\r\n   */\r\n  private showGizmo(_mesh: BABYLON.AbstractMesh): void {\r\n    this.activGizmo.attachedMesh = _mesh;\r\n  }\r\n\r\n  /**\r\n   * destroy the utilityLayer and gizmos\r\n   */\r\n  private destroyUtilGizmo(): void {\r\n    this.utilLayer.dispose();\r\n    this.positionGizmo.dispose();\r\n    this.rotationGizmo.dispose();\r\n    this.scalingGizmo.dispose();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.selectedMeshSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \":host {\\r\\n    width: 10%;\\r\\n}\\r\\n\"","module.exports = \"<details open>\\r\\n    <summary> Transform </summary>\\r\\n    <app-transform></app-transform>\\r\\n</details>\\r\\n<details open>\\r\\n    <summary> Mesh </summary>\\r\\n    <app-meshes></app-meshes>\\r\\n</details>\\r\\n<details open>\\r\\n    <summary> Material </summary>\\r\\n    <app-material></app-material>\\r\\n</details>\\r\\n<details open>\\r\\n    <summary> Player </summary>\\r\\n    <app-player></app-player>\\r\\n</details>\\r\\n<details open>\\r\\n    <summary> Create Animation </summary>\\r\\n    <app-anim-create></app-anim-create>\\r\\n</details>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-editor',\r\n  templateUrl: './editor.component.html',\r\n  styleUrls: ['./editor.component.css']\r\n})\r\nexport class EditorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"/* :host /deep/ mySelector { */\\r\\n:host ::ng-deep .childNode {\\r\\n  padding-left: 1em;\\r\\n}\\r\\n:host ::ng-deep #selected {\\r\\n  background-color: rgb(65, 163, 187);\\r\\n}\\r\\ndiv {\\r\\n  width: 100%;\\r\\n  height: 70%;\\r\\n  overflow: auto;\\r\\n  border: 1px solid white;\\r\\n}\\r\\nfieldset {\\r\\n  border: none;\\r\\n}\"","module.exports = \"<div>\\r\\n  <fieldset id=\\\"sceneField\\\">\\r\\n    <details id='scene' open>\\r\\n      <summary>scene</summary>\\r\\n    </details>\\r\\n  </fieldset>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { GlobalsService } from '../../services/globals.service';\r\nimport { AbstractMesh } from 'babylonjs';\r\n\r\n@Component({\r\n  selector: 'app-hierarchy',\r\n  templateUrl: './hierarchy.component.html',\r\n  styleUrls: ['./hierarchy.component.css']\r\n})\r\nexport class HierarchyComponent implements OnInit, OnDestroy {\r\n\r\n  private sceneList: HTMLDetailsElement;\r\n  private nodeChangeSubscription: Subscription;\r\n  private selectedMeshSubscription: Subscription;\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnInit() {\r\n    this.sceneList = <HTMLDetailsElement>document.getElementById('scene');\r\n    this.sceneList.addEventListener('dragover', this.dragOverHandler);\r\n    this.sceneList.addEventListener('drop', this.dropHandler);\r\n\r\n    this.nodeChangeSubscription = this.globals.sceneTree.subscribe(this.receiveNodeChange);\r\n    this.selectedMeshSubscription = this.globals.selectedMesh.subscribe(this.getSelectedMesh);\r\n  }\r\n\r\n  private getSelectedMesh = (_mesh: AbstractMesh) => {\r\n    // last selected node\r\n    const selected: HTMLElement = document.getElementById('selected');\r\n    if (selected) {\r\n      selected.removeAttribute('id');\r\n    }\r\n    if (_mesh) {\r\n      const node: HTMLElement = document.getElementById(_mesh.id);\r\n      const child: HTMLSummaryElement = <HTMLSummaryElement>node.firstElementChild;\r\n      child.id = 'selected';\r\n    }\r\n  }\r\n\r\n  private receiveNodeChange = (_data: string[]) => {\r\n    if (_data === undefined) {\r\n      this.removeAllNodes();\r\n      return;\r\n    }\r\n    if (_data[1] === 'add') {\r\n      this.addNode(_data[0], _data[2]);\r\n    }\r\n    if (_data[1] === 'remove') {\r\n      this.removeNode(_data[0]);\r\n    }\r\n  }\r\n\r\n  private selectMesh = (_event: MouseEvent) => {\r\n    const target: HTMLElement = <HTMLElement>_event.target;\r\n    if (target.parentElement.id !== 'camera' && target.parentElement.id !== 'light') {\r\n      this.globals.selectedMesh.next(this.globals.scene.getMeshByID(target.parentElement.id));\r\n    }\r\n  }\r\n\r\n  private dragStart = (_event: DragEvent) => {\r\n    const target: HTMLElement = <HTMLElement>_event.target;\r\n    _event.dataTransfer.setData('id', target.id);\r\n  }\r\n\r\n  private dragOverHandler = (_event: DragEvent) => {\r\n    _event.preventDefault();\r\n  }\r\n\r\n  private dropHandler = (_event: DragEvent) => {\r\n    const target: HTMLElement = <HTMLElement>_event.target;\r\n    const data: string = _event.dataTransfer.getData('id');\r\n    const node: HTMLElement = document.getElementById(data);\r\n    const parent: HTMLElement = target.parentElement;\r\n\r\n    if (parent.id === 'camera' || parent.id === 'light') {\r\n      return;\r\n    }\r\n    // check if same drag and drop target\r\n    if (parent.id === data) {\r\n      return;\r\n    }\r\n    // check if drag target is child of drop target\r\n    if (node.contains(parent)) {\r\n      return;\r\n    }\r\n    parent.appendChild(node);\r\n    this.setParent(node.id, parent.id);\r\n  }\r\n\r\n  private addNode(_nodeName: string, _parentNode: string = 'scene'): void {\r\n    const newListItem: HTMLDetailsElement = <HTMLDetailsElement>document.createElement('DETAILS');\r\n    newListItem.id = _nodeName;\r\n    newListItem.className = 'childNode';\r\n    newListItem.open = true;\r\n    newListItem.draggable = true;\r\n    newListItem.addEventListener('drop', this.dropHandler);\r\n    newListItem.addEventListener('dragover', this.dragOverHandler);\r\n    newListItem.addEventListener('dragstart', this.dragStart);\r\n    newListItem.addEventListener('click', this.selectMesh);\r\n\r\n    const summary: HTMLSummaryElement = document.createElement('SUMMARY');\r\n    summary.innerHTML = _nodeName;\r\n\r\n    newListItem.appendChild(summary);\r\n    document.getElementById(_parentNode).appendChild(newListItem);\r\n  }\r\n\r\n  private removeNode(_nodeName: string): void {\r\n    const node: HTMLElement = document.getElementById(_nodeName);\r\n    node.parentElement.removeChild(node);\r\n  }\r\n\r\n  private setParent(_mesh: string, _parent: string): void {\r\n    this.globals.scene.getMeshByID(_mesh).parent = this.globals.scene.getMeshByID(_parent);\r\n  }\r\n\r\n  private removeAllNodes(): void {\r\n    const nodes = document.getElementsByClassName('childNode');\r\n    while (nodes.length > 0) {\r\n      nodes[0].parentNode.removeChild(nodes[0]);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.nodeChangeSubscription.unsubscribe();\r\n    this.selectedMeshSubscription.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"input[type=\\\"text\\\"] {\\r\\n    width: 5em;\\r\\n}\\r\\n\\r\\ninput[type=\\\"color\\\"] {\\r\\n\\t-webkit-appearance: none;\\r\\n    border-radius: 4px;\\r\\n\\twidth: 25px;\\r\\n\\theight: 25px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"color\\\"]::-webkit-color-swatch-wrapper {\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\ninput[type=\\\"color\\\"]::-webkit-color-swatch {\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"color\\\"]:hover {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ndiv{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n    align-items: flex-end;\\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"] {\\r\\n    background: #e3e3e3;\\r\\n    border: 1px solid #bbb;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: inset 0 0 1px 1px #f6f6f6;\\r\\n    padding:4px;\\r\\n    background-color: rgb(85, 85, 129);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"]:hover  {\\r\\n    background: #d9d9d9;\\r\\n    box-shadow: inset 0 0 1px 1px #eaeaea;\\r\\n    cursor: pointer; \\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"]:active {\\r\\n    background: #d0d0d0;\\r\\n    box-shadow: inset 0 0 1px 1px #e3e3e3;\\r\\n}\\r\\n\"","module.exports = \"<fieldset>\\r\\n  Color:\\r\\n  <div>\\r\\n    <input type=\\\"color\\\" id=\\\"color\\\">\\r\\n    <input type=\\\"text\\\" id=\\\"colorName\\\" placeholder=\\\"name\\\">\\r\\n    <input type=\\\"button\\\" id=\\\"apply\\\" value=\\\"apply\\\">\\r\\n  </div>\\r\\n\\r\\n  Texture:\\r\\n  <div>\\r\\n    <input type=\\\"text\\\" id=\\\"textureName\\\" placeholder=\\\"name\\\">\\r\\n    <input type=\\\"button\\\" id=\\\"file\\\" value=\\\"select\\\">\\r\\n  </div>\\r\\n\\r\\n\\r\\n</fieldset>\"","import { Component, OnInit } from '@angular/core';\r\nimport { GlobalsService } from '../../services/globals.service';\r\nimport * as BABYLON from 'babylonjs';\r\n\r\n@Component({\r\n  selector: 'app-material',\r\n  templateUrl: './material.component.html',\r\n  styleUrls: ['./material.component.css']\r\n})\r\nexport class MaterialComponent implements OnInit {\r\n\r\n  private colorPicker: HTMLInputElement;\r\n  private material: BABYLON.StandardMaterial;\r\n  private mesh: BABYLON.AbstractMesh;\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnInit() {\r\n    this.colorPicker = <HTMLInputElement>document.getElementById('color');\r\n    // events\r\n    document.getElementById('apply').addEventListener('click', this.applyColor);\r\n    document.getElementById('file').addEventListener('click', this.requestTexturePath);\r\n    this.globals.ipcRenderer.on('texturePath-reply', this.applyTexture);\r\n    this.globals.selectedMesh.subscribe(this.getMesh);\r\n  }\r\n\r\n  private getMesh = (_mesh: BABYLON.AbstractMesh) => {\r\n    this.mesh = _mesh;\r\n  }\r\n\r\n  private applyColor = (_event: Event) => {\r\n    const colorName: HTMLInputElement = <HTMLInputElement>document.getElementById('colorName');\r\n\r\n    if (colorName.value === '') {\r\n      this.globals.ipcRenderer.send('show-message', 'The name is invalid', 'warning');\r\n      return;\r\n    } else if (this.mesh === undefined) {\r\n      this.globals.ipcRenderer.send('show-message', 'No mesh selected', 'warning');\r\n    }\r\n\r\n    this.material = new BABYLON.StandardMaterial(colorName.value, this.globals.scene);\r\n    this.material.diffuseColor = BABYLON.Color3.FromHexString(this.colorPicker.value);\r\n\r\n    if (this.mesh !== undefined) {\r\n      this.mesh.material = this.material;\r\n    }\r\n  }\r\n\r\n  private requestTexturePath = (_event: Event) => {\r\n    if (this.mesh === undefined) {\r\n      this.globals.ipcRenderer.send('show-message', 'No mesh selected', 'warning');\r\n      return;\r\n    }\r\n    const target: HTMLButtonElement = <HTMLButtonElement>_event.target;\r\n    target.disabled = true;\r\n    this.globals.ipcRenderer.send('get-texture-path');\r\n  }\r\n\r\n  private applyTexture = (_event: Event, _texturePath: string) => {\r\n    const button: HTMLButtonElement = <HTMLButtonElement>document.getElementById('file');\r\n    const textureName: HTMLInputElement = <HTMLInputElement>document.getElementById('textureName');\r\n\r\n    button.disabled = false;\r\n\r\n    if (textureName.value === '') {\r\n      this.globals.ipcRenderer.send('show-message', 'The name is invalid', 'warning');\r\n      return;\r\n    }\r\n\r\n    if (_texturePath) {\r\n      const material2 = new BABYLON.StandardMaterial(textureName.value, this.globals.scene);\r\n      material2.diffuseTexture = new BABYLON.Texture(_texturePath, this.globals.scene);\r\n\r\n      if (this.mesh !== undefined) {\r\n        this.mesh.material = material2;\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \".boxOptions {\\r\\n    width: 3em;\\r\\n}\\r\\n\\r\\nsection{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    background: #e3e3e3;\\r\\n    border: 1px solid #bbb;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: inset 0 0 1px 1px #f6f6f6;\\r\\n    padding:4px;\\r\\n    background-color: rgb(85, 85, 129);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nbutton:hover  {\\r\\n    background: #d9d9d9;\\r\\n    box-shadow: inset 0 0 1px 1px #eaeaea;\\r\\n    cursor: pointer; \\r\\n}\\r\\n\\r\\nbutton:active {\\r\\n    background: #d0d0d0;\\r\\n    box-shadow: inset 0 0 1px 1px #e3e3e3;\\r\\n}\\r\\n\"","module.exports = \"<fieldset>\\r\\n    <legend>Box</legend>\\r\\n    <section>\\r\\n        <label>height: </label>\\r\\n        <input type=\\\"number\\\" id=\\\"height\\\" class=\\\"boxOptions\\\" value=\\\"1\\\">\\r\\n    </section>\\r\\n\\r\\n    <section>\\r\\n        <label>width: </label>\\r\\n        <input type=\\\"number\\\" id=\\\"width\\\" class=\\\"boxOptions\\\" value=\\\"1\\\">\\r\\n    </section>\\r\\n\\r\\n    <section>\\r\\n        <label>depth: </label>\\r\\n        <input type=\\\"number\\\" id=\\\"depth\\\" class=\\\"boxOptions\\\" value=\\\"1\\\">\\r\\n    </section>\\r\\n\\r\\n    <br>\\r\\n    <button (click)=\\\"sendMessage()\\\">Create</button>\\r\\n\\r\\n</fieldset>\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\r\nimport { MeshBuilder } from 'babylonjs';\r\nimport { MeshesComponent } from '../meshes.component';\r\nimport { GlobalsService } from '../../../services/globals.service';\r\nimport { BuildMeshMessage } from '../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-box',\r\n  templateUrl: './box.component.html',\r\n  styleUrls: ['./box.component.css']\r\n})\r\nexport class BoxComponent implements OnInit, OnChanges {\r\n\r\n  private inputs: HTMLCollectionOf<HTMLInputElement>;\r\n  @Input() createMesh: BuildMeshMessage;\r\n  @Output() meshCreatedEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.createMesh !== undefined && this.createMesh.isBuilt === false) {\r\n      const name: string = this.createMesh.type + this.createMesh.count;\r\n      MeshBuilder.CreateBox(name, {}, this.createMesh.scene);\r\n      MeshesComponent.count++;\r\n      this.meshCreatedEvent.emit(name);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputs = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('boxOptions');\r\n  }\r\n\r\n  public sendMessage() {\r\n    const name: string = 'box' + MeshesComponent.count;\r\n    const height: number = parseFloat(this.inputs[0].value);\r\n    const width: number = parseFloat(this.inputs[1].value);\r\n    const depth: number = parseFloat(this.inputs[2].value);\r\n\r\n    MeshBuilder.CreateBox(name, { height: height, width: width, depth: depth }, this.globals.scene);\r\n\r\n    MeshesComponent.count++;\r\n\r\n    this.meshCreatedEvent.emit(name);\r\n  }\r\n\r\n}\r\n","module.exports = \".cylinderOptions {\\r\\n    width: 3em;\\r\\n}\\r\\n\\r\\nsection{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    background: #e3e3e3;\\r\\n    border: 1px solid #bbb;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: inset 0 0 1px 1px #f6f6f6;\\r\\n    padding:4px;\\r\\n    background-color: rgb(85, 85, 129);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nbutton:hover  {\\r\\n    background: #d9d9d9;\\r\\n    box-shadow: inset 0 0 1px 1px #eaeaea;\\r\\n    cursor: pointer; \\r\\n}\\r\\n\\r\\nbutton:active {\\r\\n    background: #d0d0d0;\\r\\n    box-shadow: inset 0 0 1px 1px #e3e3e3;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n  <legend>Cylinder</legend>\\r\\n  <section>\\r\\n    <label for=\\\"\\\">height</label>\\r\\n    <input type=\\\"number\\\" id=\\\"height\\\" class=\\\"cylinderOptions\\\" value=\\\"2\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label for=\\\"\\\">&#8960; top:</label>\\r\\n    <input type=\\\"number\\\" id=\\\"diameterTop\\\" class=\\\"cylinderOptions\\\" value=\\\"1\\\" min=\\\"0\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label for=\\\"\\\">&#8960; bottom:</label>\\r\\n    <input type=\\\"number\\\" id=\\\"diameterBottom\\\" class=\\\"cylinderOptions\\\" value=\\\"1\\\" min=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label for=\\\"\\\">tessellation:</label>\\r\\n    <input type=\\\"number\\\" id=\\\"tessellation\\\" class=\\\"cylinderOptions\\\" value=\\\"24\\\" min=\\\"2\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label for=\\\"\\\">subdivisions:</label>\\r\\n    <input type=\\\"number\\\" id=\\\"subdivisions\\\" class=\\\"cylinderOptions\\\" value=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label for=\\\"\\\">arc:</label>\\r\\n    <input type=\\\"number\\\" id=\\\"arc\\\" class=\\\"cylinderOptions\\\" value=\\\"1\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.01\\\">\\r\\n  </section>\\r\\n\\r\\n  <br>\\r\\n  <button (click)=\\\"sendMessage()\\\">Create</button>\\r\\n\\r\\n</fieldset>\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\r\nimport { MeshBuilder, Mesh } from 'babylonjs';\r\nimport { MeshesComponent } from '../meshes.component';\r\nimport { GlobalsService } from '../../../services/globals.service';\r\nimport { BuildMeshMessage } from '../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-cylinder',\r\n  templateUrl: './cylinder.component.html',\r\n  styleUrls: ['./cylinder.component.css']\r\n})\r\nexport class CylinderComponent implements OnInit, OnChanges {\r\n\r\n  private inputs: HTMLCollectionOf<HTMLInputElement>;\r\n  @Input() createMesh: BuildMeshMessage;\r\n  @Output() meshCreatedEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.createMesh !== undefined && this.createMesh.isBuilt === false) {\r\n      const name: string = this.createMesh.type + this.createMesh.count;\r\n      MeshBuilder.CreateCylinder(name, {}, this.createMesh.scene);\r\n      MeshesComponent.count++;\r\n      this.meshCreatedEvent.emit(name);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputs = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('cylinderOptions');\r\n  }\r\n\r\n  public sendMessage() {\r\n    const name: string = 'cylinder' + MeshesComponent.count;\r\n    const height: number = parseFloat(this.inputs[0].value);\r\n    const diameterTop: number = parseFloat(this.inputs[1].value);\r\n    const diameterBottom: number = parseFloat(this.inputs[2].value);\r\n    const tessellation: number = parseFloat(this.inputs[3].value);\r\n    const subdivisions: number = parseFloat(this.inputs[4].value);\r\n    const arc: number = parseFloat(this.inputs[5].value);\r\n\r\n    MeshBuilder.CreateCylinder(\r\n      name,\r\n      {\r\n        height: height,\r\n        diameterTop: diameterTop,\r\n        diameterBottom: diameterBottom,\r\n        tessellation: tessellation,\r\n        subdivisions: subdivisions,\r\n        arc: arc,\r\n        sideOrientation: Mesh.DOUBLESIDE\r\n      },\r\n      this.globals.scene);\r\n\r\n    MeshesComponent.count++;\r\n\r\n    this.meshCreatedEvent.emit(name);\r\n  }\r\n\r\n}\r\n","module.exports = \".discOptions {\\r\\n    width: 3em;\\r\\n}\\r\\n\\r\\nsection{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    background: #e3e3e3;\\r\\n    border: 1px solid #bbb;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: inset 0 0 1px 1px #f6f6f6;\\r\\n    padding:4px;\\r\\n    background-color: rgb(85, 85, 129);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nbutton:hover  {\\r\\n    background: #d9d9d9;\\r\\n    box-shadow: inset 0 0 1px 1px #eaeaea;\\r\\n    cursor: pointer; \\r\\n}\\r\\n\\r\\nbutton:active {\\r\\n    background: #d0d0d0;\\r\\n    box-shadow: inset 0 0 1px 1px #e3e3e3;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n  <legend>Disc</legend>\\r\\n  <section>\\r\\n    <label>radius:</label>\\r\\n    <input type=\\\"number\\\" id=\\\"radius\\\" class=\\\"discOptions\\\" value=\\\"0.5\\\" step=\\\"0.25\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>tessellation:</label>\\r\\n    <input type=\\\"number\\\" id=\\\"tessellation\\\" class=\\\"discOptions\\\" value=\\\"64\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label for=\\\"\\\">arc:</label>\\r\\n    <input type=\\\"number\\\" id=\\\"arc\\\" class=\\\"discOptions\\\" value=\\\"1\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.01\\\">\\r\\n  </section>\\r\\n\\r\\n  <br>\\r\\n  <button (click)=\\\"sendMessage()\\\">Create</button>\\r\\n\\r\\n</fieldset>\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\r\nimport { MeshBuilder } from 'babylonjs';\r\nimport { MeshesComponent } from '../meshes.component';\r\nimport { GlobalsService } from '../../../services/globals.service';\r\nimport { BuildMeshMessage } from '../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-disc',\r\n  templateUrl: './disc.component.html',\r\n  styleUrls: ['./disc.component.css']\r\n})\r\nexport class DiscComponent implements OnInit, OnChanges {\r\n\r\n  private inputs: HTMLCollectionOf<HTMLInputElement>;\r\n  @Input() createMesh: BuildMeshMessage;\r\n  @Output() meshCreatedEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.createMesh !== undefined && this.createMesh.isBuilt === false) {\r\n      const name: string = this.createMesh.type + this.createMesh.count;\r\n      MeshBuilder.CreateDisc(name, {}, this.createMesh.scene);\r\n      MeshesComponent.count++;\r\n      this.meshCreatedEvent.emit(name);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputs = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('discOptions');\r\n  }\r\n\r\n  public sendMessage() {\r\n    const name: string = 'disc' + MeshesComponent.count;\r\n    const radius: number = parseFloat(this.inputs[0].value);\r\n    const tessellation: number = parseFloat(this.inputs[1].value);\r\n    const arc: number = parseFloat(this.inputs[2].value);\r\n\r\n    MeshBuilder.CreateDisc(\r\n      name,\r\n      {\r\n        radius: radius,\r\n        tessellation: tessellation,\r\n        arc: arc\r\n      },\r\n      this.globals.scene);\r\n\r\n    MeshesComponent.count++;\r\n\r\n    this.meshCreatedEvent.emit(name);\r\n  }\r\n\r\n}\r\n","module.exports = \".groundOptions {\\r\\n    width: 3em;\\r\\n}\\r\\n\\r\\nsection{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    background: #e3e3e3;\\r\\n    border: 1px solid #bbb;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: inset 0 0 1px 1px #f6f6f6;\\r\\n    padding:4px;\\r\\n    background-color: rgb(85, 85, 129);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nbutton:hover  {\\r\\n    background: #d9d9d9;\\r\\n    box-shadow: inset 0 0 1px 1px #eaeaea;\\r\\n    cursor: pointer; \\r\\n}\\r\\n\\r\\nbutton:active {\\r\\n    background: #d0d0d0;\\r\\n    box-shadow: inset 0 0 1px 1px #e3e3e3;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n  <legend>Ground</legend>\\r\\n  <section>\\r\\n    <label for=\\\"\\\">width</label>\\r\\n    <input type=\\\"number\\\" id=\\\"width\\\" class=\\\"groundOptions\\\" value=\\\"1\\\" min=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label for=\\\"\\\">height</label>\\r\\n    <input type=\\\"number\\\" id=\\\"height\\\" class=\\\"groundOptions\\\" value=\\\"1\\\" min=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <br>\\r\\n  <button (click)=\\\"sendMessage()\\\">Create</button>\\r\\n\\r\\n</fieldset>\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\r\nimport { MeshBuilder } from 'babylonjs';\r\nimport { MeshesComponent } from '../meshes.component';\r\nimport { GlobalsService } from '../../../services/globals.service';\r\nimport { BuildMeshMessage } from '../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-ground',\r\n  templateUrl: './ground.component.html',\r\n  styleUrls: ['./ground.component.css']\r\n})\r\nexport class GroundComponent implements OnInit, OnChanges {\r\n\r\n  private inputs: HTMLCollectionOf<HTMLInputElement>;\r\n  @Input() createMesh: BuildMeshMessage;\r\n  @Output() meshCreatedEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.createMesh !== undefined && this.createMesh.isBuilt === false) {\r\n      const name: string = this.createMesh.type + this.createMesh.count;\r\n      MeshBuilder.CreateGround(name, {}, this.createMesh.scene);\r\n      MeshesComponent.count++;\r\n      this.meshCreatedEvent.emit(name);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputs = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('groundOptions');\r\n  }\r\n\r\n  public sendMessage() {\r\n    const name: string = 'ground' + MeshesComponent.count;\r\n    const width: number = parseFloat(this.inputs[0].value);\r\n    const height: number = parseFloat(this.inputs[1].value);\r\n\r\n    MeshBuilder.CreateGround(name, { width: width, height: height }, this.globals.scene);\r\n\r\n    MeshesComponent.count++;\r\n\r\n    this.meshCreatedEvent.emit(name);\r\n  }\r\n\r\n}\r\n","module.exports = \".meshButtons{\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    background-color: rgb(85, 85, 129);\\r\\n    border: 1px solid rgb(0, 0, 0);\\r\\n    border-radius: 3px;\\r\\n    padding: 2px;\\r\\n}\\r\\n.meshButtons:hover{\\r\\n    background: #d9d9d9;\\r\\n}\"","module.exports = \"<input type=\\\"image\\\" class=\\\"meshButtons\\\" src=\\\"assets/shapes/cube.png\\\" alt=\\\"translation\\\" value=\\\"box\\\"/>\\r\\n<input type=\\\"image\\\" class=\\\"meshButtons\\\" src=\\\"assets/shapes/cylinder.png\\\" alt=\\\"translation\\\" value=\\\"cylinder\\\"/>\\r\\n<input type=\\\"image\\\" class=\\\"meshButtons\\\" src=\\\"assets/shapes/sphere.png\\\" alt=\\\"translation\\\" value=\\\"sphere\\\"/>\\r\\n<input type=\\\"image\\\" class=\\\"meshButtons\\\" src=\\\"assets/shapes/disc.png\\\" alt=\\\"translation\\\" value=\\\"disc\\\"/>\\r\\n<input type=\\\"image\\\" class=\\\"meshButtons\\\" src=\\\"assets/shapes/torus.png\\\" alt=\\\"translation\\\" value=\\\"torus\\\"/>\\r\\n<input type=\\\"image\\\" class=\\\"meshButtons\\\" src=\\\"assets/shapes/plane.png\\\" alt=\\\"translation\\\" value=\\\"plane\\\"/>\\r\\n<input type=\\\"image\\\" class=\\\"meshButtons\\\" src=\\\"assets/shapes/ground.png\\\" alt=\\\"translation\\\" value=\\\"ground\\\"/>\\r\\n\\r\\n\\r\\n<div [ngSwitch]=\\\"name\\\">\\r\\n  <app-box *ngSwitchCase=\\\"'box'\\\" (meshCreatedEvent)=\\\"createdMesh($event)\\\" [createMesh]=\\\"createMeshMessage\\\"></app-box>\\r\\n  <app-cylinder *ngSwitchCase=\\\"'cylinder'\\\" (meshCreatedEvent)=\\\"createdMesh($event)\\\" [createMesh]=\\\"createMeshMessage\\\"></app-cylinder>\\r\\n  <app-sphere *ngSwitchCase=\\\"'sphere'\\\" (meshCreatedEvent)=\\\"createdMesh($event)\\\" [createMesh]=\\\"createMeshMessage\\\"></app-sphere>\\r\\n  <app-disc *ngSwitchCase=\\\"'disc'\\\" (meshCreatedEvent)=\\\"createdMesh($event)\\\" [createMesh]=\\\"createMeshMessage\\\"></app-disc>\\r\\n  <app-torus *ngSwitchCase=\\\"'torus'\\\" (meshCreatedEvent)=\\\"createdMesh($event)\\\" [createMesh]=\\\"createMeshMessage\\\"></app-torus>\\r\\n  <app-plane *ngSwitchCase=\\\"'plane'\\\" (meshCreatedEvent)=\\\"createdMesh($event)\\\" [createMesh]=\\\"createMeshMessage\\\"></app-plane>\\r\\n  <app-ground *ngSwitchCase=\\\"'ground'\\\" (meshCreatedEvent)=\\\"createdMesh($event)\\\" [createMesh]=\\\"createMeshMessage\\\"></app-ground>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { BuildMeshMessage } from '../../services/interfaces';\r\nimport { GlobalsService } from '../../services/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-meshes',\r\n  templateUrl: './meshes.component.html',\r\n  styleUrls: ['./meshes.component.css']\r\n})\r\nexport class MeshesComponent implements OnInit {\r\n\r\n  public static count: number;\r\n  public name: string;\r\n  private createMeshMessage: BuildMeshMessage;\r\n  private message: BuildMeshMessage;\r\n\r\n\r\n  constructor(private globals: GlobalsService) {\r\n    MeshesComponent.count = 0;\r\n    this.name = 'box';\r\n  }\r\n\r\n  ngOnInit() {\r\n    const radioBtns = document.getElementsByClassName('meshButtons');\r\n    for (let index = 0; index < radioBtns.length; index++) {\r\n      radioBtns[index].addEventListener('click', this.getMeshName);\r\n    }\r\n\r\n    this.globals.ipcRenderer.on('create-mesh', this.buildInstructions);\r\n  }\r\n\r\n  private getMeshName = (_event: Event) => {\r\n    this.name = (<HTMLInputElement>_event.target).value;\r\n  }\r\n\r\n  private buildInstructions = (_event: Event, _name: string) => {\r\n    this.name = _name.toLowerCase();\r\n\r\n    this.message = {\r\n      count: MeshesComponent.count,\r\n      type: this.name,\r\n      scene: this.globals.scene,\r\n      isBuilt: false\r\n    };\r\n\r\n    this.createMeshMessage = this.message;\r\n  }\r\n\r\n  private createdMesh(_name: string) {\r\n    this.globals.sceneTree.next([_name, 'add']);\r\n    // end of buildmessage\r\n    this.message = {\r\n      count: MeshesComponent.count,\r\n      type: this.name,\r\n      scene: this.globals.scene,\r\n      isBuilt: true\r\n    };\r\n    this.createMeshMessage = this.message;\r\n  }\r\n\r\n}\r\n","module.exports = \".planeOptions{\\r\\n    width: 3em;\\r\\n}\\r\\n\\r\\nsection{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    background: #e3e3e3;\\r\\n    border: 1px solid #bbb;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: inset 0 0 1px 1px #f6f6f6;\\r\\n    padding:4px;\\r\\n    background-color: rgb(85, 85, 129);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nbutton:hover  {\\r\\n    background: #d9d9d9;\\r\\n    box-shadow: inset 0 0 1px 1px #eaeaea;\\r\\n    cursor: pointer; \\r\\n}\\r\\n\\r\\nbutton:active {\\r\\n    background: #d0d0d0;\\r\\n    box-shadow: inset 0 0 1px 1px #e3e3e3;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n  <legend>Plane</legend>\\r\\n  <section>\\r\\n    <label>width</label>\\r\\n    <input type=\\\"number\\\" id=\\\"width\\\" class=\\\"planeOptions\\\" value=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>height</label>\\r\\n    <input type=\\\"number\\\" id=\\\"height\\\" class=\\\"planeOptions\\\" value=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <br>\\r\\n  <button (click)=\\\"sendMessage()\\\">Create</button>\\r\\n\\r\\n</fieldset>\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\r\nimport { MeshBuilder } from 'babylonjs';\r\nimport { MeshesComponent } from '../meshes.component';\r\nimport { GlobalsService } from '../../../services/globals.service';\r\nimport { BuildMeshMessage } from '../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-plane',\r\n  templateUrl: './plane.component.html',\r\n  styleUrls: ['./plane.component.css']\r\n})\r\nexport class PlaneComponent implements OnInit, OnChanges {\r\n\r\n  private inputs: HTMLCollectionOf<HTMLInputElement>;\r\n  @Input() createMesh: BuildMeshMessage;\r\n  @Output() meshCreatedEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.createMesh !== undefined && this.createMesh.isBuilt === false) {\r\n      const name: string = this.createMesh.type + this.createMesh.count;\r\n      MeshBuilder.CreatePlane(name, {}, this.createMesh.scene);\r\n      MeshesComponent.count++;\r\n      this.meshCreatedEvent.emit(name);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputs = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('planeOptions');\r\n  }\r\n\r\n  public sendMessage() {\r\n    const name: string = 'plane' + MeshesComponent.count;\r\n    const width: number = parseFloat(this.inputs[0].value);\r\n    const height: number = parseFloat(this.inputs[1].value);\r\n\r\n    MeshBuilder.CreatePlane(name, { width: width, height: height }, this.globals.scene);\r\n\r\n    MeshesComponent.count++;\r\n\r\n    this.meshCreatedEvent.emit(name);\r\n  }\r\n}\r\n","module.exports = \".sphereOptions {\\r\\n    width: 3em;\\r\\n}\\r\\n\\r\\nsection{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    background: #e3e3e3;\\r\\n    border: 1px solid #bbb;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: inset 0 0 1px 1px #f6f6f6;\\r\\n    padding:4px;\\r\\n    background-color: rgb(85, 85, 129);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nbutton:hover  {\\r\\n    background: #d9d9d9;\\r\\n    box-shadow: inset 0 0 1px 1px #eaeaea;\\r\\n    cursor: pointer; \\r\\n}\\r\\n\\r\\nbutton:active {\\r\\n    background: #d0d0d0;\\r\\n    box-shadow: inset 0 0 1px 1px #e3e3e3;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n  <legend>Sphere</legend>\\r\\n  <section>\\r\\n    <label>segments</label>\\r\\n    <input type=\\\"number\\\" id=\\\"segments\\\" class=\\\"sphereOptions\\\" value=\\\"32\\\" min=\\\"0\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>&#8960; X</label>\\r\\n    <input type=\\\"number\\\" id=\\\"diameterX\\\" class=\\\"sphereOptions\\\" value=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>&#8960; Y</label>\\r\\n    <input type=\\\"number\\\" id=\\\"diameterY\\\" class=\\\"sphereOptions\\\" value=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>&#8960; Z</label>\\r\\n    <input type=\\\"number\\\" id=\\\"diameterZ\\\" class=\\\"sphereOptions\\\" value=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>arc</label>\\r\\n    <input type=\\\"number\\\" id=\\\"arc\\\" class=\\\"sphereOptions\\\" value=\\\"1\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.01\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>slice</label>\\r\\n    <input type=\\\"number\\\" id=\\\"slice\\\" class=\\\"sphereOptions\\\" value=\\\"1\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.01\\\">\\r\\n  </section>\\r\\n\\r\\n  <br>\\r\\n  <button (click)=\\\"sendMessage()\\\">Create</button>\\r\\n\\r\\n</fieldset>\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\r\nimport { MeshBuilder } from 'babylonjs';\r\nimport { MeshesComponent } from '../meshes.component';\r\nimport { GlobalsService } from '../../../services/globals.service';\r\nimport { BuildMeshMessage } from '../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-sphere',\r\n  templateUrl: './sphere.component.html',\r\n  styleUrls: ['./sphere.component.css']\r\n})\r\nexport class SphereComponent implements OnInit, OnChanges {\r\n\r\n  private inputs: HTMLCollectionOf<HTMLInputElement>;\r\n  @Input() createMesh: BuildMeshMessage;\r\n  @Output() meshCreatedEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.createMesh !== undefined && this.createMesh.isBuilt === false) {\r\n      const name: string = this.createMesh.type + this.createMesh.count;\r\n      MeshBuilder.CreateSphere(name, {}, this.createMesh.scene);\r\n      MeshesComponent.count++;\r\n      this.meshCreatedEvent.emit(name);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputs = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('sphereOptions');\r\n  }\r\n\r\n  public sendMessage() {\r\n    const name: string = 'sphere' + MeshesComponent.count;\r\n    const segments: number = parseFloat(this.inputs[0].value);\r\n    const diameterX: number = parseFloat(this.inputs[1].value);\r\n    const diameterY: number = parseFloat(this.inputs[2].value);\r\n    const diameterZ: number = parseFloat(this.inputs[3].value);\r\n    const arc: number = parseFloat(this.inputs[4].value);\r\n    const slice: number = parseFloat(this.inputs[5].value);\r\n\r\n    MeshBuilder.CreateSphere(\r\n      name,\r\n      {\r\n        segments: segments,\r\n        diameterX: diameterX,\r\n        diameterY: diameterY,\r\n        diameterZ: diameterZ,\r\n        arc: arc,\r\n        slice: slice\r\n      },\r\n      this.globals.scene);\r\n    MeshesComponent.count++;\r\n\r\n    this.meshCreatedEvent.emit(name);\r\n  }\r\n\r\n}\r\n","module.exports = \".torusOptions {\\r\\n    width: 3em;\\r\\n}\\r\\n\\r\\nsection{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    background: #e3e3e3;\\r\\n    border: 1px solid #bbb;\\r\\n    border-radius: 3px;\\r\\n    box-shadow: inset 0 0 1px 1px #f6f6f6;\\r\\n    padding:4px;\\r\\n    background-color: rgb(85, 85, 129);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\nbutton:hover  {\\r\\n    background: #d9d9d9;\\r\\n    box-shadow: inset 0 0 1px 1px #eaeaea;\\r\\n    cursor: pointer; \\r\\n}\\r\\n\\r\\nbutton:active {\\r\\n    background: #d0d0d0;\\r\\n    box-shadow: inset 0 0 1px 1px #e3e3e3;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n  <legend>Torus</legend>\\r\\n\\r\\n  <section>\\r\\n    <label>&#8960; </label>\\r\\n    <input type=\\\"number\\\" id=\\\"diameter\\\" class=\\\"torusOptions\\\" value=\\\"1\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>thickness</label>\\r\\n    <input type=\\\"number\\\" id=\\\"thickness\\\" class=\\\"torusOptions\\\" value=\\\"0.5\\\" step=\\\"0.1\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>tessellation</label>\\r\\n    <input type=\\\"number\\\" id=\\\"tessellation\\\" class=\\\"torusOptions\\\" value=\\\"16\\\" min=\\\"3\\\">\\r\\n  </section>\\r\\n\\r\\n  <br>\\r\\n  <button (click)=\\\"sendMessage()\\\">Create</button>\\r\\n\\r\\n</fieldset>\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\r\nimport { MeshBuilder } from 'babylonjs';\r\nimport { MeshesComponent } from '../meshes.component';\r\nimport { GlobalsService } from '../../../services/globals.service';\r\nimport { BuildMeshMessage } from '../../../services/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-torus',\r\n  templateUrl: './torus.component.html',\r\n  styleUrls: ['./torus.component.css']\r\n})\r\nexport class TorusComponent implements OnInit, OnChanges {\r\n\r\n  private inputs: HTMLCollectionOf<HTMLInputElement>;\r\n  @Input() createMesh: BuildMeshMessage;\r\n  @Output() meshCreatedEvent: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.createMesh !== undefined && this.createMesh.isBuilt === false) {\r\n      const name: string = this.createMesh.type + this.createMesh.count;\r\n      MeshBuilder.CreateTorus(name, {}, this.createMesh.scene);\r\n      MeshesComponent.count++;\r\n      this.meshCreatedEvent.emit(name);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputs = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('torusOptions');\r\n  }\r\n\r\n  public sendMessage() {\r\n    const name: string = 'torus' + MeshesComponent.count;\r\n    const diameter: number = parseFloat(this.inputs[0].value);\r\n    const thickness: number = parseFloat(this.inputs[1].value);\r\n    const tessellation: number = parseFloat(this.inputs[2].value);\r\n\r\n    MeshBuilder.CreateTorus(\r\n      name,\r\n      {\r\n        diameter: diameter,\r\n        thickness: thickness,\r\n        tessellation: tessellation\r\n      },\r\n      this.globals.scene);\r\n\r\n    MeshesComponent.count++;\r\n\r\n    this.meshCreatedEvent.emit(name);\r\n  }\r\n\r\n}\r\n","module.exports = \"section {\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.transformValue{\\r\\n    width: 5em;\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n.buttons{\\r\\n    width: 20px;\\r\\n    width: 20px;\\r\\n    margin: 0 5px;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n  <section>\\r\\n    <input type=\\\"image\\\" id=\\\"translation\\\" class=\\\"buttons\\\" src=\\\"assets/icons/arrow.png\\\" alt=\\\"translation\\\" />\\r\\n    <input type=\\\"image\\\" id=\\\"rotation\\\" class=\\\"buttons\\\" src=\\\"assets/icons/rotate.png\\\" alt=\\\"rotation\\\" />\\r\\n    <input type=\\\"image\\\" id=\\\"scaling\\\" class=\\\"buttons\\\" src=\\\"assets/icons/expand-arrow.png\\\" alt=\\\"scaling\\\" />\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>Translation</label>\\r\\n    <br> X:\\r\\n    <input type=\\\"number\\\" class=\\\"transformValue\\\" id=\\\"t_x\\\" value=\\\"0\\\">\\r\\n    <br> Y:\\r\\n    <input type=\\\"number\\\" class=\\\"transformValue\\\" id=\\\"t_y\\\" value=\\\"0\\\">\\r\\n    <br> Z:\\r\\n    <input type=\\\"number\\\" class=\\\"transformValue\\\" id=\\\"t_z\\\" value=\\\"0\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>Rotation</label>\\r\\n    <br> X:\\r\\n    <input type=\\\"number\\\" class=\\\"transformValue\\\" id=\\\"r_x\\\" value=\\\"0\\\" step=\\\"0.01\\\">\\r\\n    <br> Y:\\r\\n    <input type=\\\"number\\\" class=\\\"transformValue\\\" id=\\\"r_y\\\" value=\\\"0\\\" step=\\\"0.01\\\">\\r\\n    <br> Z:\\r\\n    <input type=\\\"number\\\" class=\\\"transformValue\\\" id=\\\"r_z\\\" value=\\\"0\\\" step=\\\"0.01\\\">\\r\\n  </section>\\r\\n\\r\\n  <section>\\r\\n    <label>Scaling</label>\\r\\n    <br> X:\\r\\n    <input type=\\\"number\\\" class=\\\"transformValue\\\" id=\\\"s_x\\\" value=\\\"0\\\">\\r\\n    <br> Y:\\r\\n    <input type=\\\"number\\\" class=\\\"transformValue\\\" id=\\\"s_y\\\" value=\\\"0\\\">\\r\\n    <br> Z:\\r\\n    <input type=\\\"number\\\" class=\\\"transformValue\\\" id=\\\"s_z\\\" value=\\\"0\\\">\\r\\n  </section>\\r\\n\\r\\n\\r\\n</fieldset>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Vector3, AbstractMesh } from 'babylonjs';\r\nimport { Subscription } from 'rxjs';\r\nimport { GlobalsService } from '../../services/globals.service';\r\n\r\n@Component({\r\n  selector: 'app-transform',\r\n  templateUrl: './transform.component.html',\r\n  styleUrls: ['./transform.component.css']\r\n})\r\nexport class TransformComponent implements OnInit, OnDestroy {\r\n\r\n  private inputs: HTMLCollectionOf<HTMLInputElement>;\r\n  private mesh: AbstractMesh;\r\n\r\n  private meshSubscription: Subscription;\r\n\r\n  constructor(private globals: GlobalsService) { }\r\n\r\n  ngOnInit() {\r\n    // event\r\n    this.inputs = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('transformValue');\r\n    for (let index = 0; index < this.inputs.length; index++) {\r\n      this.inputs[index].addEventListener('input', this.modifyValues);\r\n    }\r\n\r\n    this.meshSubscription = this.globals.selectedMesh.subscribe(this.getMesh);\r\n  }\r\n\r\n  private getMesh = (_mesh: AbstractMesh) => {\r\n    this.mesh = _mesh;\r\n    this.showValues();\r\n  }\r\n\r\n  /**\r\n  * change the position, rotation and scaling of selected mesh after changing it in the view\r\n  */\r\n  private modifyValues = (_event: Event) => {\r\n    const position: Vector3 = new Vector3(parseInt(this.inputs[0].value, 10), parseInt(this.inputs[1].value, 10), parseInt(this.inputs[2].value, 10));\r\n    const rotation: Vector3 = new Vector3(parseFloat(this.inputs[3].value), parseFloat(this.inputs[4].value), parseFloat(this.inputs[5].value));\r\n    const scaling: Vector3 = new Vector3(parseInt(this.inputs[6].value, 10), parseInt(this.inputs[7].value, 10), parseInt(this.inputs[8].value, 10));\r\n\r\n    this.mesh.position = position;\r\n    this.mesh.scaling = scaling;\r\n    this.mesh.rotationQuaternion = rotation.toQuaternion();\r\n  }\r\n\r\n  /**\r\n  * receives the position, rotation and scaling of selected mesh\r\n  */\r\n  private showValues(): void {\r\n    let transformInfo: HTMLCollectionOf<HTMLInputElement>;\r\n    transformInfo = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('transformValue');\r\n\r\n    if (this.mesh === undefined) {\r\n      for (let i = 0; i < transformInfo.length; i++) {\r\n        transformInfo[i].value = '0';\r\n      }\r\n      return;\r\n    }\r\n\r\n    transformInfo[0].value = this.mesh.position.x.toString();\r\n    transformInfo[1].value = this.mesh.position.y.toString();\r\n    transformInfo[2].value = this.mesh.position.z.toString();\r\n\r\n    if (this.mesh.rotationQuaternion !== undefined && this.mesh.rotationQuaternion !== null) {\r\n      transformInfo[3].value = this.mesh.rotationQuaternion.toEulerAngles().x.toString();\r\n      transformInfo[4].value = this.mesh.rotationQuaternion.toEulerAngles().y.toString();\r\n      transformInfo[5].value = this.mesh.rotationQuaternion.toEulerAngles().z.toString();\r\n    } else {\r\n      transformInfo[3].value = this.mesh.rotation.x.toString();\r\n      transformInfo[4].value = this.mesh.rotation.y.toString();\r\n      transformInfo[5].value = this.mesh.rotation.z.toString();\r\n    }\r\n\r\n    transformInfo[6].value = this.mesh.scaling.x.toString();\r\n    transformInfo[7].value = this.mesh.scaling.y.toString();\r\n    transformInfo[8].value = this.mesh.scaling.z.toString();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.meshSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Scene, AbstractMesh } from 'babylonjs';\r\nimport { Subject } from 'rxjs';\r\nimport { ElectronService } from 'ngx-electron';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalsService {\r\n\r\n  public scene: Scene;\r\n  public selectedMesh: Subject<AbstractMesh>;\r\n  public selectedAnimation: Subject<string[]>;\r\n  public sceneTree: Subject<string[]>;\r\n  public ipcRenderer: Electron.IpcRenderer;\r\n\r\n\r\n  constructor() {\r\n    this.selectedMesh = new Subject();\r\n    this.selectedAnimation = new Subject();\r\n    this.sceneTree = new Subject();\r\n    this.ipcRenderer = new ElectronService().ipcRenderer;\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}