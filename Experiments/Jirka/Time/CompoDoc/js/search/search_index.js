var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/Time.html",[0,0.469,1,0.469]],["body/classes/Time.html",[0,0.393,1,0.711,2,0.626,3,0.626,4,0.626,5,0.418,6,0.418,7,1.372,8,1.057,9,1.057,10,2.184,11,1.057,12,1.611,13,1.8,14,1.057,15,1.057,16,1.057,17,2.184,18,0.626,19,0.18,20,1.057,21,2.478,22,1.372,23,1.372,24,1.372,25,1.057,26,1.611,27,1.611,28,1.611,29,1.611,30,1.372,31,2.351,32,1.057,33,0.879,34,0.153,35,2.823,36,0.626,37,0.626,38,0.626,39,0.626,40,1.953,41,2.274,42,1.611,43,1.611,44,1.611,45,1.203,46,0.626,47,1.057,48,1.057,49,1.611,50,1.057,51,1.057,52,1.057,53,0.626,54,1.057,55,0.626,56,1.057,57,1.611,58,0.706,59,0.706,60,0.706,61,1.953,62,1.057,63,1.372,64,0.706,65,1.057,66,1.611,67,1.077,68,1.057,69,0.626,70,1.057,71,1.057,72,0.706,73,1.372,74,1.8,75,1.057,76,0.626,77,0.626,78,0.626,79,0.626,80,0.626,81,0.626,82,0.626,83,0.626,84,0.626,85,1.372,86,1.372,87,1.611,88,1.372,89,1.372,90,1.372,91,1.057,92,1.057,93,0.626,94,0.626,95,0.03,96,0.051,97,0.03]],["title/coverage.html",[98,1.475]],["body/coverage.html",[0,0.536,1,0.691,5,1.25,6,1.25,33,0.841,34,0.146,64,1.883,95,0.09,96,0.116,97,0.09,98,1.25,99,1.87,100,1.87,101,1.87,102,1.87,103,1.87,104,1.267,105,2.667,106,1.25,107,2.817,108,1.25,109,1.25,110,1.87,111,1.87,112,1.87,113,1.87]],["title/miscellaneous/functions.html",[114,0.396,115,1.31]],["body/miscellaneous/functions.html",[19,0.568,34,0.146,45,1.832,58,1.325,59,1.325,60,1.325,67,1.832,95,0.095,96,0.12,97,0.095,104,1.295,106,1.672,108,1.832,109,1.832,114,0.568,115,1.325,116,1.982,117,1.982]],["title/index.html",[19,0.469,118,1.094]],["body/index.html",[0,0.693,34,0.136,72,1.615,95,0.116,96,0.136,97,0.116,118,1.615]],["title/modules.html",[119,1.475]],["body/modules.html",[34,0.137,95,0.118,96,0.137,97,0.118,119,1.642]],["title/miscellaneous/variables.html",[114,0.396,120,1.31]],["body/miscellaneous/variables.html",[1,0.837,19,0.656,33,1.029,34,0.14,95,0.11,96,0.131,97,0.11,104,1.229,114,0.656,120,1.528]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"classes/Time.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":64,"title":{},"body":{"classes/Time.html":{},"coverage.html":{}}}],["0.0",{"_index":66,"title":{},"body":{"classes/Time.html":{}}}],["0/1",{"_index":107,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":72,"title":{},"body":{"classes/Time.html":{},"index.html":{}}}],["1.0",{"_index":74,"title":{},"body":{"classes/Time.html":{}}}],["2019",{"_index":83,"title":{},"body":{"classes/Time.html":{}}}],["54",{"_index":102,"title":{},"body":{"coverage.html":{}}}],["6/11",{"_index":103,"title":{},"body":{"coverage.html":{}}}],["_event",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_scale",{"_index":73,"title":{},"body":{"classes/Time.html":{}}}],["_time",{"_index":63,"title":{},"body":{"classes/Time.html":{}}}],["allowing",{"_index":70,"title":{},"body":{"classes/Time.html":{}}}],["allows",{"_index":15,"title":{},"body":{"classes/Time.html":{}}}],["author",{"_index":78,"title":{},"body":{"classes/Time.html":{}}}],["automatically",{"_index":51,"title":{},"body":{"classes/Time.html":{}}}],["call",{"_index":49,"title":{},"body":{"classes/Time.html":{}}}],["class",{"_index":0,"title":{"classes/Time.html":{}},"body":{"classes/Time.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Time.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"classes/Time.html":{}}}],["correlates",{"_index":11,"title":{},"body":{"classes/Time.html":{}}}],["coverage",{"_index":98,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":41,"title":{},"body":{"classes/Time.html":{}}}],["default",{"_index":61,"title":{},"body":{"classes/Time.html":{}}}],["defined",{"_index":31,"title":{},"body":{"classes/Time.html":{}}}],["dell'oro",{"_index":80,"title":{},"body":{"classes/Time.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/Time.html":{}}}],["desired",{"_index":75,"title":{},"body":{"classes/Time.html":{}}}],["documentation",{"_index":99,"title":{},"body":{"coverage.html":{}}}],["elapsed",{"_index":12,"title":{},"body":{"classes/Time.html":{}}}],["example",{"_index":18,"title":{},"body":{"classes/Time.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/Time.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Time.html":{},"coverage.html":{}}}],["friedl",{"_index":81,"title":{},"body":{"classes/Time.html":{}}}],["function",{"_index":105,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":115,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":9,"title":{},"body":{"classes/Time.html":{}}}],["getelapsedsincepreviouscall",{"_index":26,"title":{},"body":{"classes/Time.html":{}}}],["getscale",{"_index":27,"title":{},"body":{"classes/Time.html":{}}}],["hfu",{"_index":82,"title":{},"body":{"classes/Time.html":{}}}],["identifier",{"_index":100,"title":{},"body":{"coverage.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"classes/Time.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Time.html":{}}}],["init",{"_index":106,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["init(_event",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instance",{"_index":43,"title":{},"body":{"classes/Time.html":{}}}],["instances",{"_index":8,"title":{},"body":{"classes/Time.html":{}}}],["jirka",{"_index":79,"title":{},"body":{"classes/Time.html":{}}}],["last",{"_index":48,"title":{},"body":{"classes/Time.html":{}}}],["lastcalltoelapsed",{"_index":22,"title":{},"body":{"classes/Time.html":{}}}],["matching",{"_index":96,"title":{},"body":{"classes/Time.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":50,"title":{},"body":{"classes/Time.html":{}}}],["methods",{"_index":25,"title":{},"body":{"classes/Time.html":{}}}],["milliseconds",{"_index":44,"title":{},"body":{"classes/Time.html":{}}}],["miscellaneous",{"_index":114,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":119,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":59,"title":{},"body":{"classes/Time.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":76,"title":{},"body":{"classes/Time.html":{}}}],["new",{"_index":111,"title":{},"body":{"coverage.html":{}}}],["number",{"_index":35,"title":{},"body":{"classes/Time.html":{}}}],["offset",{"_index":23,"title":{},"body":{"classes/Time.html":{}}}],["optional",{"_index":60,"title":{},"body":{"classes/Time.html":{},"miscellaneous/functions.html":{}}}],["overview",{"_index":118,"title":{"index.html":{}},"body":{"index.html":{}}}],["param",{"_index":91,"title":{},"body":{"classes/Time.html":{}}}],["parameters",{"_index":58,"title":{},"body":{"classes/Time.html":{},"miscellaneous/functions.html":{}}}],["passed",{"_index":47,"title":{},"body":{"classes/Time.html":{}}}],["performance.now",{"_index":86,"title":{},"body":{"classes/Time.html":{}}}],["private",{"_index":21,"title":{},"body":{"classes/Time.html":{}}}],["program",{"_index":14,"title":{},"body":{"classes/Time.html":{}}}],["properties",{"_index":20,"title":{},"body":{"classes/Time.html":{}}}],["re",{"_index":56,"title":{},"body":{"classes/Time.html":{}}}],["represent",{"_index":65,"title":{},"body":{"classes/Time.html":{}}}],["reset",{"_index":52,"title":{},"body":{"classes/Time.html":{}}}],["resetting",{"_index":16,"title":{},"body":{"classes/Time.html":{}}}],["result",{"_index":95,"title":{},"body":{"classes/Time.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":97,"title":{},"body":{"classes/Time.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":40,"title":{},"body":{"classes/Time.html":{}}}],["return",{"_index":90,"title":{},"body":{"classes/Time.html":{}}}],["returns",{"_index":45,"title":{},"body":{"classes/Time.html":{},"miscellaneous/functions.html":{}}}],["scale",{"_index":24,"title":{},"body":{"classes/Time.html":{}}}],["scaled",{"_index":42,"title":{},"body":{"classes/Time.html":{}}}],["scaling",{"_index":17,"title":{},"body":{"classes/Time.html":{}}}],["set",{"_index":28,"title":{},"body":{"classes/Time.html":{}}}],["set(_time",{"_index":54,"title":{},"body":{"classes/Time.html":{}}}],["sets",{"_index":57,"title":{},"body":{"classes/Time.html":{}}}],["setscale",{"_index":29,"title":{},"body":{"classes/Time.html":{}}}],["setscale(_scale",{"_index":68,"title":{},"body":{"classes/Time.html":{}}}],["slowmotion",{"_index":71,"title":{},"body":{"classes/Time.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Time.html":{}}}],["start",{"_index":13,"title":{},"body":{"classes/Time.html":{}}}],["statements",{"_index":101,"title":{},"body":{"coverage.html":{}}}],["table",{"_index":113,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":112,"title":{},"body":{"coverage.html":{}}}],["testanimation",{"_index":108,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["testnumbers",{"_index":109,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["this.get",{"_index":94,"title":{},"body":{"classes/Time.html":{}}}],["this.getelapsedsincepreviouscall",{"_index":92,"title":{},"body":{"classes/Time.html":{}}}],["this.lastcalltoelapsed",{"_index":89,"title":{},"body":{"classes/Time.html":{}}}],["this.offset",{"_index":88,"title":{},"body":{"classes/Time.html":{}}}],["this.scale",{"_index":87,"title":{},"body":{"classes/Time.html":{}}}],["this.set(this.get",{"_index":93,"title":{},"body":{"classes/Time.html":{}}}],["this.start",{"_index":85,"title":{},"body":{"classes/Time.html":{}}}],["time",{"_index":1,"title":{"classes/Time.html":{}},"body":{"classes/Time.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["time.ts",{"_index":6,"title":{},"body":{"classes/Time.html":{},"coverage.html":{}}}],["time.ts:10",{"_index":36,"title":{},"body":{"classes/Time.html":{}}}],["time.ts:11",{"_index":32,"title":{},"body":{"classes/Time.html":{}}}],["time.ts:22",{"_index":39,"title":{},"body":{"classes/Time.html":{}}}],["time.ts:29",{"_index":55,"title":{},"body":{"classes/Time.html":{}}}],["time.ts:38",{"_index":69,"title":{},"body":{"classes/Time.html":{}}}],["time.ts:46",{"_index":53,"title":{},"body":{"classes/Time.html":{}}}],["time.ts:53",{"_index":46,"title":{},"body":{"classes/Time.html":{}}}],["time.ts:8",{"_index":38,"title":{},"body":{"classes/Time.html":{}}}],["time.ts:9",{"_index":37,"title":{},"body":{"classes/Time.html":{}}}],["timestamp",{"_index":10,"title":{},"body":{"classes/Time.html":{}}}],["timetest",{"_index":77,"title":{},"body":{"classes/Time.html":{}}}],["timetest.ts",{"_index":104,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/Time.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":62,"title":{},"body":{"classes/Time.html":{}}}],["variable",{"_index":110,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":120,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":67,"title":{},"body":{"classes/Time.html":{},"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Time.html":{"url":"classes/Time.html","title":"class - Time","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Time\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            Time.ts\n        \n\n            \n                Description\n            \n            \n                Instances of this class generate a timestamp that correlates with the time elapsed\nsince the start of the program but allows for resetting and scaling\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastCallToElapsed\n                            \n                            \n                                    Private\n                                offset\n                            \n                            \n                                    Private\n                                scale\n                            \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getElapsedSincePreviousCall\n                            \n                            \n                                getScale\n                            \n                            \n                                set\n                            \n                            \n                                setScale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in Time.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastCallToElapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in Time.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in Time.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in Time.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in Time.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in Time.ts:22\n                \n            \n\n\n            \n                \n                    Retrieves the current scaled timestamp of this instance in milliseconds\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getElapsedSincePreviousCall\n                        \n                        \n                    \n                \n            \n            \n                \ngetElapsedSincePreviousCall()\n                \n            \n\n\n            \n                \n                    Defined in Time.ts:53\n                \n            \n\n\n            \n                \n                    Retrieves the scaled time in milliseconds passed since the last call to this method\nAutomatically reset at every call to set(...) and setScale(...)\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScale\n                        \n                        \n                    \n                \n            \n            \n                \ngetScale()\n                \n            \n\n\n            \n                \n                    Defined in Time.ts:46\n                \n            \n\n\n            \n                \n                    Retrieves the current scaling of this time\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(_time: number)\n                \n            \n\n\n            \n                \n                    Defined in Time.ts:29\n                \n            \n\n\n            \n                \n                    (Re-) Sets the timestamp of this instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    _time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        The timestamp to represent the current time (default 0.0)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setScale\n                        \n                        \n                    \n                \n            \n            \n                \nsetScale(_scale: number)\n                \n            \n\n\n            \n                \n                    Defined in Time.ts:38\n                \n            \n\n\n            \n                \n                    Sets the scaling of this time, allowing for slowmotion (1) \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    _scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1.0\n                                    \n\n                                    \n                                        The desired scaling (default 1.0)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        namespace TimeTest {\n    /**\n     * Instances of this class generate a timestamp that correlates with the time elapsed\n     * since the start of the program but allows for resetting and scaling\n     * @author Jirka Dell'Oro-Friedl, HFU, 2019\n     */\n    export class Time {\n        private start: number;\n        private scale: number;\n        private offset: number;\n        private lastCallToElapsed: number;\n\n        constructor() {\n            this.start = performance.now();\n            this.scale = 1.0;\n            this.offset = 0.0;\n            this.lastCallToElapsed = 0.0;\n        }\n        /**\n         * Retrieves the current scaled timestamp of this instance in milliseconds\n         */\n        get(): number {\n            return this.offset + this.scale * (performance.now() - this.start);\n        }\n        /**\n         * (Re-) Sets the timestamp of this instance\n         * @param _time The timestamp to represent the current time (default 0.0)\n         */\n        set(_time: number = 0): void {\n            this.offset = _time;\n            this.start = performance.now();\n            this.getElapsedSincePreviousCall();\n        }\n        /**\n         * Sets the scaling of this time, allowing for slowmotion (1) \n         * @param _scale The desired scaling (default 1.0)\n         */\n        setScale(_scale: number = 1.0): void {\n            this.set(this.get());\n            this.scale = _scale;\n            this.getElapsedSincePreviousCall();\n        }\n        /**\n         * Retrieves the current scaling of this time\n         */\n        getScale(): number {\n            return this.scale;\n        }\n        /**\n         * Retrieves the scaled time in milliseconds passed since the last call to this method\n         * Automatically reset at every call to set(...) and setScale(...)\n         */\n        getElapsedSincePreviousCall(): number {\n            let current: number = this.get();\n            let elapsed: number = current - this.lastCallToElapsed;\n            this.lastCallToElapsed = current;\n            return elapsed;\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                Time.ts\n            \n            class\n            Time\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                TimeTest.ts\n            \n            function\n            init\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                TimeTest.ts\n            \n            function\n            testAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                TimeTest.ts\n            \n            function\n            testNumbers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                TimeTest.ts\n            \n            variable\n            time\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            init   (TimeTest.ts)\n                        \n                        \n                            testAnimation   (TimeTest.ts)\n                        \n                        \n                            testNumbers   (TimeTest.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    TimeTest.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit(_event)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            testAnimation\n                        \n                        \n                    \n                \n            \n            \n                \ntestAnimation()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            testNumbers\n                        \n                        \n                    \n                \n            \n            \n                \ntestNumbers()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            time   (TimeTest.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    TimeTest.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Time\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
